{"version":3,"sources":["../src/transformer/util/resolve-path.ts","../src/transformer/util/path-util.ts","../src/shared/util/util.ts","../src/transformer/util/walk-through-filler-nodes.ts","../src/transformer/built-in/built-in-module-map.ts","../src/transformer/util/transform-module-specifier.ts","../src/transformer/util/is-require-call.ts","../src/transformer/util/find-node-up.ts","../src/transformer/util/is-statement.ts","../src/transformer/util/is-declaration.ts","../src/transformer/util/is-statement-or-declaration.ts","../src/transformer/util/generate-name-from-module-specifier.ts","../src/transformer/util/get-module-exports-from-require-data-in-context.ts","../src/transformer/util/should-debug.ts","../src/transformer/util/maybe-generate-import-attributes.ts","../src/transformer/visitor/visit/visit-call-expression.ts","../src/transformer/util/get-exports-data.ts","../src/transformer/util/is-named-declaration.ts","../src/transformer/util/ensure-node-has-export-modifier.ts","../src/transformer/util/node-contains-super.ts","../src/transformer/util/is-expression.ts","../src/transformer/util/get-locals-for-binding-name.ts","../src/transformer/visitor/visit/visit-binary-expression.ts","../src/transformer/util/will-be-reassigned.ts","../src/transformer/visitor/visit/visit-variable-declaration.ts","../src/transformer/visitor/visit/is-not-emitted-statement.ts","../src/transformer/visitor/visit/visit-variable-declaration-list.ts","../src/transformer/util/get-best-body-in-scope.ts","../src/transformer/visitor/visit/visit-node.ts","../src/transformer/transform-source-file.ts","../src/transformer/util/should-skip-emit.ts","../src/transformer/visitor/visit/visit-import-declaration.ts","../src/transformer/visitor/visit/visit-export-declaration.ts","../src/transformer/visitor/visit/visit-export-assignment.ts","../src/transformer/visitor/visit/visit-import-and-export-declarations.ts","../src/shared/file-system/file-system.ts","../src/shared/logger/logger.ts","../src/shared/task/create-task-options.ts","../src/transformer/cjs-to-esm-transformer.ts","../src/transformer/cjs-to-esm.ts","../src/cli/task/transform/transform-task.ts","../src/shared/compiler-host/create-compiler-host.ts","../src/shared/constant.ts","../src/shared/task/create-transform-task-options.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport resolve from \"resolve\";\nimport type {SafeReadonlyFileSystem} from \"../../shared/file-system/file-system.js\";\nimport path from \"crosspath\";\nimport {isExternalLibrary} from \"./path-util.js\";\nimport {isRecord} from \"../../shared/util/util.js\";\n\nexport interface ResolveOptions {\n\tcwd: string;\n\tid: string;\n\tparent: string | null | undefined;\n\tmoduleDirectory?: string;\n\tprioritizedPackageKeys?: string[];\n\tprioritizedExtensions?: string[];\n\tresolveCache: Map<string, string | null>;\n\tfileSystem: SafeReadonlyFileSystem;\n}\n\n/**\n * Computes a cache key based on the combination of id and parent\n */\nfunction computeCacheKey(id: string, parent: string | null | undefined): string {\n\treturn isExternalLibrary(id) ? id : `${parent == null ? \"\" : `${parent}->`}${id}`;\n}\n\n/**\n * A function that can resolve an import path\n */\nexport function resolvePath({\n\tid,\n\tparent,\n\tcwd,\n\tprioritizedPackageKeys = [\"exports\", \"es2015\", \"esm2015\", \"module\", \"jsnext:main\", \"main\", \"browser\"],\n\tprioritizedExtensions = [\"\", \".js\", \".mjs\", \".cjs\", \".jsx\", \".ts\", \".mts\", \".cts\", \".tsx\", \".json\"],\n\tmoduleDirectory = \"node_modules\",\n\tfileSystem,\n\tresolveCache\n}: ResolveOptions): string | undefined {\n\tid = path.normalize(id);\n\tif (parent != null) {\n\t\tparent = path.normalize(parent);\n\t}\n\n\tconst cacheKey = computeCacheKey(id, parent);\n\n\t// Attempt to take the resolve result from the cache\n\tconst cacheResult = resolveCache.get(cacheKey);\n\n\t// If it is a proper path, return it\n\tif (cacheResult != null) return cacheResult;\n\n\t// Otherwise, if the cache result isn't strictly equal to 'undefined', it has previously been resolved to a non-existing file\n\tif (cacheResult === null) return;\n\n\tif (!isExternalLibrary(id)) {\n\t\tconst absolute = path.isAbsolute(id) ? path.normalize(id) : path.join(parent == null ? \"\" : path.dirname(parent), id);\n\t\tconst variants = [absolute, path.join(absolute, \"index\")];\n\n\t\tfor (const variant of variants) {\n\t\t\tfor (const ext of prioritizedExtensions) {\n\t\t\t\tconst withExtension = `${variant}${ext}`;\n\t\t\t\tif (fileSystem.safeStatSync(withExtension)?.isFile() ?? false) {\n\t\t\t\t\t// Add it to the cache\n\t\t\t\t\tresolveCache.set(cacheKey, withExtension);\n\t\t\t\t\treturn withExtension;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add it to the cache and mark it as unresolvable\n\t\tresolveCache.set(cacheKey, null);\n\t\treturn undefined;\n\t}\n\n\t// Otherwise, try to resolve it via node module resolution and put it in the cache\n\ttry {\n\t\tconst resolveResult = path.normalize(\n\t\t\tresolve.sync(id, {\n\t\t\t\tbasedir: path.normalize(cwd),\n\t\t\t\textensions: prioritizedExtensions,\n\t\t\t\tmoduleDirectory: moduleDirectory,\n\t\t\t\treadFileSync: p => fileSystem.readFileSync(p).toString(),\n\t\t\t\tisFile: p => fileSystem.safeStatSync(p)?.isFile() ?? false,\n\t\t\t\tisDirectory: p => fileSystem.safeStatSync(p)?.isDirectory() ?? false,\n\t\t\t\tpackageFilter(pkg) {\n\t\t\t\t\tlet property: string | undefined | null;\n\n\t\t\t\t\t//  Otherwise, or if no key was selected, use the prioritized list of fields and take the first matched one\n\t\t\t\t\tif (property == null) {\n\t\t\t\t\t\tconst packageKeys = Object.keys(pkg);\n\t\t\t\t\t\tproperty = prioritizedPackageKeys.find(key => packageKeys.includes(key));\n\t\t\t\t\t}\n\n\t\t\t\t\t// If a property was resolved, set the 'main' property to it (resolve will use the main property no matter what)\n\t\t\t\t\tif (property != null) {\n\t\t\t\t\t\tlet pickedProperty = pkg[property];\n\t\t\t\t\t\twhile (isRecord(pickedProperty)) {\n\t\t\t\t\t\t\tif (\"import\" in pickedProperty) {\n\t\t\t\t\t\t\t\tpickedProperty = (pickedProperty as any).import;\n\t\t\t\t\t\t\t} else if (\".\" in pickedProperty) {\n\t\t\t\t\t\t\t\tpickedProperty = pickedProperty[\".\"];\n\t\t\t\t\t\t\t} else if (\"default\" in pickedProperty) {\n\t\t\t\t\t\t\t\tpickedProperty = (pickedProperty as any).default;\n\t\t\t\t\t\t\t} else if (\"require\" in pickedProperty) {\n\t\t\t\t\t\t\t\tpickedProperty = (pickedProperty as any).require;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpickedProperty = pickedProperty[Object.keys(pickedProperty)[0]!];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpkg.main = pickedProperty!;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the package\n\t\t\t\t\treturn pkg;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Add it to the cache\n\t\tresolveCache.set(cacheKey, resolveResult);\n\n\t\t// Return it\n\t\treturn resolveResult;\n\t} catch {\n\t\t// No file could be resolved. Set it in the cache as unresolvable and return void\n\t\tresolveCache.set(cacheKey, null);\n\n\t\t// Return undefinedÂ¬\n\t\treturn undefined;\n\t}\n}\n","import {normalize} from \"crosspath\";\n\nexport const KNOWN_EXTENSIONS = [\n\t\".d.ts\",\n\t\".d.dts.map\",\n\t\".js.map\",\n\t\".ts\",\n\t\".tsx\",\n\t\".js\",\n\t\".jsx\",\n\t\".mjs\",\n\t\".mjs.map\",\n\t\".mjsx\",\n\t\".cjs\",\n\t\".cjs.map\",\n\t\".csjx\",\n\t\".d.cts\",\n\t\".d.cts.map\",\n\t\".d.mts\",\n\t\".d.mts.map\",\n\t\".json\",\n\t\".tsbuildinfo\"\n] as const;\n\n/**\n * Ensure that the given path has a leading \".\"\n */\nexport function ensureHasLeadingDotAndPosix(p: string): string {\n\tconst posixPath = normalize(p);\n\tif (posixPath.startsWith(\".\")) return posixPath;\n\tif (posixPath.startsWith(\"/\")) return `.${posixPath}`;\n\treturn `./${posixPath}`;\n}\n\n/**\n * Strips the extension from a file\n */\nexport function stripKnownExtension(file: string): string {\n\tlet currentExtname: string | undefined;\n\n\tfor (const extName of KNOWN_EXTENSIONS) {\n\t\tif (file.endsWith(extName)) {\n\t\t\tcurrentExtname = extName;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (currentExtname == null) return file;\n\n\treturn file.slice(0, file.lastIndexOf(currentExtname));\n}\n\n/**\n * Sets the given extension for the given file\n */\nexport function setExtension(file: string, extension: string): string {\n\treturn normalize(`${stripKnownExtension(file)}${extension}`);\n}\n\n/**\n * Returns true if the given path represents an external library\n */\nexport function isExternalLibrary(p: string): boolean {\n\treturn !p.startsWith(\".\") && !p.startsWith(\"/\");\n}\n\nexport function isJsonModule(p: string): boolean {\n\treturn p.endsWith(`.json`);\n}\n","/* eslint-disable @typescript-eslint/unified-signatures */\nimport path from \"crosspath\";\nimport type {IgnoredLookupValue} from \"helpertypes\";\nimport type {TS} from \"../../type/ts.js\";\n\nexport interface RandomPathOptions {\n\textension: string;\n\tprefix: string;\n\tsuffix: string;\n}\n\nexport function isArray<T>(value: readonly T[]): value is readonly T[];\nexport function isArray<T>(value: T[]): value is T[];\nexport function isArray<T>(value: T[] | readonly T[]): value is T[] | readonly T[];\nexport function isArray<T>(value: T | readonly T[]): value is readonly T[];\nexport function isArray<T>(value: T | T[]): value is T[];\nexport function isArray<T>(value: T | T[] | readonly T[]): value is T[] | readonly T[];\nexport function isArray<T>(value: unknown): value is T[] | readonly T[];\nexport function isArray<T>(value: unknown): value is T[] | readonly T[] {\n\treturn Array.isArray(value);\n}\n\nexport function generateRandomPath({extension = \"\", prefix = \"__#auto-generated-\", suffix = String(Math.floor(Math.random() * 100000))}: Partial<RandomPathOptions> = {}) {\n\treturn `${prefix}${suffix}${extension}`;\n}\n\n/**\n * Ensures that the given item is in fact an array\n */\nexport function ensureArray<T>(item: T | T[]): T[] {\n\treturn Array.isArray(item) ? item : [item];\n}\n\nexport function getFolderClosestToRoot(root: string, files: Iterable<string>): string {\n\tconst [head] = files;\n\tif (head == null) {\n\t\tthrow new ReferenceError(`At least 1 file must be provided`);\n\t}\n\tlet candidate = head;\n\n\tfor (const file of files) {\n\t\tconst relativeToRoot = path.relative(root, file);\n\t\tif (relativeToRoot.split(\"/\").length < candidate.split(\"/\").length) {\n\t\t\tcandidate = relativeToRoot;\n\t\t}\n\t}\n\n\treturn path.join(root, path.dirname(candidate));\n}\n\nexport function rewriteFilenamePath(root: string, filename: string, outDir?: string) {\n\tif (outDir == null) return path.normalize(filename);\n\tconst {dir, base} = path.parse(filename);\n\n\tlet relativeDirFromSrc = dir === \"\" ? path.join(path.relative(root, dir)) : path.join(path.relative(root, dir), \"../\");\n\n\tif (relativeDirFromSrc.startsWith(\"/\")) {\n\t\trelativeDirFromSrc = relativeDirFromSrc.slice(1);\n\t}\n\tif (relativeDirFromSrc.startsWith(\"./\")) {\n\t\trelativeDirFromSrc = relativeDirFromSrc.slice(2);\n\t}\n\tif (relativeDirFromSrc.includes(\"/\")) {\n\t\trelativeDirFromSrc = relativeDirFromSrc.slice(relativeDirFromSrc.indexOf(\"/\") + 1);\n\t} else {\n\t\trelativeDirFromSrc = ``;\n\t}\n\treturn path.join(outDir, relativeDirFromSrc, base);\n}\n\nexport function normalizeGlob(glob: string): string {\n\treturn path.extname(glob) === \"\" && !glob.endsWith(\"*\") ? `${glob}/*` : glob;\n}\n\nexport function isRecord<T>(value: T): value is Exclude<T, IgnoredLookupValue | unknown[]> & {} {\n\treturn (\n\t\t!Array.isArray(value) &&\n\t\ttypeof value === \"object\" &&\n\t\tvalue != null &&\n\t\t!(value instanceof Date) &&\n\t\t!(value instanceof Set) &&\n\t\t!(value instanceof WeakSet) &&\n\t\t!(value instanceof Map) &&\n\t\t!(value instanceof WeakMap)\n\t);\n}\n\nexport function getModifierLikes(node: TS.Node): readonly TS.ModifierLike[] | undefined {\n\tconst modifiers = \"modifiers\" in node && isArray(node.modifiers) ? (node.modifiers as readonly TS.ModifierLike[]) : [];\n\tif (\"decorators\" in node && Array.isArray(node.decorators)) {\n\t\treturn [...(node.decorators as TS.Decorator[]), ...modifiers];\n\t} else {\n\t\treturn modifiers;\n\t}\n}\n\nexport function canHaveModifiers(node: TS.Node, typescript: typeof TS): node is TS.HasModifiers {\n\tif (\"canHaveModifiers\" in typescript) {\n\t\treturn typescript.canHaveModifiers(node);\n\t} else {\n\t\treturn true;\n\t}\n}\nexport function getModifiers(node: TS.HasModifiers, typescript: typeof TS): readonly TS.Modifier[] | undefined {\n\tif (\"getModifiers\" in typescript) {\n\t\treturn typescript.getModifiers(node);\n\t} else {\n\t\treturn node.modifiers?.filter(modifier => !(\"expression\" in modifier)) as readonly TS.Modifier[] | undefined;\n\t}\n}\n\nexport function canHaveDecorators(node: TS.Node, typescript: typeof TS): node is TS.HasDecorators {\n\tif (\"canHaveDecorators\" in typescript) {\n\t\treturn typescript.canHaveDecorators(node);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function getDecorators(node: TS.HasDecorators, typescript: typeof TS): readonly TS.Decorator[] | undefined {\n\tif (\"getDecorators\" in typescript) {\n\t\treturn typescript.getDecorators(node);\n\t} else {\n\t\tconst legacyDecorators = \"decorators\" in node && isArray(node.decorators) ? (node.decorators as readonly TS.Decorator[]) : undefined;\n\t\tconst decoratorModifierLikes = node.modifiers?.filter(modifier => \"expression\" in modifier) as readonly TS.Decorator[] | undefined;\n\t\treturn [...(legacyDecorators ?? []), ...(decoratorModifierLikes ?? [])];\n\t}\n}\n\n/**\n * Removes an export modifier from the given ModifiersArray\n */\nexport function addExportModifier<T extends TS.HasModifiers>(node: T, typescript: typeof TS, factory: TS.NodeFactory): readonly TS.ModifierLike[] {\n\treturn addModifier(node, typescript, factory, typescript.SyntaxKind.ExportKeyword);\n}\n\nexport function hasExportModifier(node: TS.Node, typescript: typeof TS): node is TS.HasModifiers {\n\treturn hasModifier(node, typescript, typescript.SyntaxKind.ExportKeyword);\n}\n\nexport function hasDefaultExportModifier(node: TS.Node, typescript: typeof TS): boolean {\n\treturn hasExportModifier(node, typescript) && hasModifier(node, typescript, typescript.SyntaxKind.DefaultKeyword);\n}\n\nexport function hasModifier(node: TS.Node, typescript: typeof TS, modifier: TS.ModifierSyntaxKind): boolean {\n\treturn canHaveModifiers(node, typescript) ? Boolean(node.modifiers?.some(m => m.kind === modifier)) : false;\n}\n\n/**\n * Removes an export modifier from the given ModifiersArray\n */\nexport function addModifier<T extends TS.HasModifiers>(node: T, typescript: typeof TS, factory: TS.NodeFactory, modifier: TS.ModifierSyntaxKind): readonly TS.ModifierLike[] {\n\tconst modifiers = getModifiers(node, typescript) ?? [];\n\n\tif (modifiers.some(m => m.kind === modifier)) return modifiers;\n\n\tif (!canHaveDecorators(node, typescript)) {\n\t\treturn [factory.createModifier(modifier), ...modifiers.map(m => factory.createModifier(m.kind))];\n\t} else {\n\t\tconst decorators = getDecorators(node, typescript) ?? [];\n\t\treturn [factory.createModifier(modifier), ...modifiers.map(m => factory.createModifier(m.kind)), ...decorators.map(decorator => factory.createDecorator(decorator.expression))];\n\t}\n}\n\nexport function isTypeAssertionExpression(node: TS.Node, typescript: typeof TS): node is TS.TypeAssertion {\n\tif (\"isTypeAssertionExpression\" in (typescript as never)) {\n\t\treturn typescript.isTypeAssertionExpression(node);\n\t} else {\n\t\treturn Boolean((typescript as {isTypeAssertion?: typeof typescript.isTypeAssertionExpression}).isTypeAssertion?.(node));\n\t}\n}\n","/**\n * Returns the given Expression itself if it isn't considered a \"filler node\"\n */\nimport {isTypeAssertionExpression} from \"../../shared/util/util.js\";\nimport type {TS} from \"../../type/ts.js\";\n\nexport function walkThroughFillerNodes(expression: TS.Expression, typescript: typeof TS): TS.Expression {\n\tif (\n\t\ttypescript.isParenthesizedExpression(expression) ||\n\t\ttypescript.isAsExpression(expression) ||\n\t\tisTypeAssertionExpression(expression, typescript) ||\n\t\ttypescript.isNonNullExpression(expression) ||\n\t\ttypescript.isExpressionWithTypeArguments(expression)\n\t) {\n\t\treturn expression.expression;\n\t}\n\n\treturn expression;\n}\n","/* eslint-disable */\n/**\n * @file This file is auto-generated. Do not change its contents.\n */\n\nimport type {ElementOf} from \"helpertypes\";\nimport type {ModuleExports} from \"../module-exports/module-exports.js\";\n\nexport const BUILT_IN_MODULE = new Set([\n\t\"assert\",\n\t\"assert/strict\",\n\t\"async_hooks\",\n\t\"buffer\",\n\t\"child_process\",\n\t\"cluster\",\n\t\"console\",\n\t\"constants\",\n\t\"crypto\",\n\t\"dgram\",\n\t\"diagnostics_channel\",\n\t\"dns\",\n\t\"dns/promises\",\n\t\"domain\",\n\t\"events\",\n\t\"fs\",\n\t\"fs/promises\",\n\t\"http\",\n\t\"http2\",\n\t\"https\",\n\t\"inspector\",\n\t\"inspector/promises\",\n\t\"module\",\n\t\"net\",\n\t\"os\",\n\t\"path\",\n\t\"path/posix\",\n\t\"path/win32\",\n\t\"perf_hooks\",\n\t\"process\",\n\t\"punycode\",\n\t\"querystring\",\n\t\"readline\",\n\t\"readline/promises\",\n\t\"repl\",\n\t\"stream\",\n\t\"stream/consumers\",\n\t\"stream/promises\",\n\t\"stream/web\",\n\t\"string_decoder\",\n\t\"timers\",\n\t\"timers/promises\",\n\t\"tls\",\n\t\"trace_events\",\n\t\"tty\",\n\t\"url\",\n\t\"util\",\n\t\"util/types\",\n\t\"v8\",\n\t\"vm\",\n\t\"wasi\",\n\t\"worker_threads\",\n\t\"zlib\"\n] as const);\n\nexport type BuiltInModule = ElementOf<typeof BUILT_IN_MODULE>;\nexport type BuiltInModuleMap = {\n\t[Key in BuiltInModule]: ModuleExports;\n};\n\nexport function isBuiltInModule(moduleName: string): moduleName is BuiltInModule {\n\treturn BUILT_IN_MODULE.has(moduleName as BuiltInModule);\n}\n\nexport const BUILT_IN_MODULE_MAP: BuiltInModuleMap = {\n\tassert: {\n\t\tnamedExports: new Set([]),\n\t\thasDefaultExport: true\n\t},\n\t\"assert/strict\": {\n\t\tnamedExports: new Set([]),\n\t\thasDefaultExport: true\n\t},\n\tasync_hooks: {\n\t\tnamedExports: new Set([\"AsyncLocalStorage\", \"createHook\", \"executionAsyncId\", \"triggerAsyncId\", \"executionAsyncResource\", \"asyncWrapProviders\", \"AsyncResource\"]),\n\t\thasDefaultExport: true\n\t},\n\tbuffer: {\n\t\tnamedExports: new Set([\n\t\t\t\"Buffer\",\n\t\t\t\"SlowBuffer\",\n\t\t\t\"transcode\",\n\t\t\t\"isUtf8\",\n\t\t\t\"isAscii\",\n\t\t\t\"kMaxLength\",\n\t\t\t\"kStringMaxLength\",\n\t\t\t\"btoa\",\n\t\t\t\"atob\",\n\t\t\t\"constants\",\n\t\t\t\"INSPECT_MAX_BYTES\",\n\t\t\t\"Blob\",\n\t\t\t\"resolveObjectURL\",\n\t\t\t\"File\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tchild_process: {\n\t\tnamedExports: new Set([\"ChildProcess\", \"exec\", \"execFile\", \"execFileSync\", \"execSync\", \"fork\", \"spawn\", \"spawnSync\"]),\n\t\thasDefaultExport: true\n\t},\n\tcluster: {\n\t\tnamedExports: new Set([\n\t\t\t\"isWorker\",\n\t\t\t\"isMaster\",\n\t\t\t\"isPrimary\",\n\t\t\t\"Worker\",\n\t\t\t\"workers\",\n\t\t\t\"settings\",\n\t\t\t\"SCHED_NONE\",\n\t\t\t\"SCHED_RR\",\n\t\t\t\"schedulingPolicy\",\n\t\t\t\"setupPrimary\",\n\t\t\t\"setupMaster\",\n\t\t\t\"fork\",\n\t\t\t\"disconnect\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tconsole: {\n\t\tnamedExports: new Set([\n\t\t\t\"log\",\n\t\t\t\"warn\",\n\t\t\t\"error\",\n\t\t\t\"dir\",\n\t\t\t\"time\",\n\t\t\t\"timeEnd\",\n\t\t\t\"timeLog\",\n\t\t\t\"trace\",\n\t\t\t\"assert\",\n\t\t\t\"clear\",\n\t\t\t\"count\",\n\t\t\t\"countReset\",\n\t\t\t\"group\",\n\t\t\t\"groupEnd\",\n\t\t\t\"table\",\n\t\t\t\"debug\",\n\t\t\t\"info\",\n\t\t\t\"dirxml\",\n\t\t\t\"groupCollapsed\",\n\t\t\t\"Console\",\n\t\t\t\"profile\",\n\t\t\t\"profileEnd\",\n\t\t\t\"timeStamp\",\n\t\t\t\"context\",\n\t\t\t\"createTask\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tconstants: {\n\t\tnamedExports: new Set([\n\t\t\t\"RTLD_LAZY\",\n\t\t\t\"RTLD_NOW\",\n\t\t\t\"RTLD_GLOBAL\",\n\t\t\t\"RTLD_LOCAL\",\n\t\t\t\"E2BIG\",\n\t\t\t\"EACCES\",\n\t\t\t\"EADDRINUSE\",\n\t\t\t\"EADDRNOTAVAIL\",\n\t\t\t\"EAFNOSUPPORT\",\n\t\t\t\"EAGAIN\",\n\t\t\t\"EALREADY\",\n\t\t\t\"EBADF\",\n\t\t\t\"EBADMSG\",\n\t\t\t\"EBUSY\",\n\t\t\t\"ECANCELED\",\n\t\t\t\"ECHILD\",\n\t\t\t\"ECONNABORTED\",\n\t\t\t\"ECONNREFUSED\",\n\t\t\t\"ECONNRESET\",\n\t\t\t\"EDEADLK\",\n\t\t\t\"EDESTADDRREQ\",\n\t\t\t\"EDOM\",\n\t\t\t\"EDQUOT\",\n\t\t\t\"EEXIST\",\n\t\t\t\"EFAULT\",\n\t\t\t\"EFBIG\",\n\t\t\t\"EHOSTUNREACH\",\n\t\t\t\"EIDRM\",\n\t\t\t\"EILSEQ\",\n\t\t\t\"EINPROGRESS\",\n\t\t\t\"EINTR\",\n\t\t\t\"EINVAL\",\n\t\t\t\"EIO\",\n\t\t\t\"EISCONN\",\n\t\t\t\"EISDIR\",\n\t\t\t\"ELOOP\",\n\t\t\t\"EMFILE\",\n\t\t\t\"EMLINK\",\n\t\t\t\"EMSGSIZE\",\n\t\t\t\"EMULTIHOP\",\n\t\t\t\"ENAMETOOLONG\",\n\t\t\t\"ENETDOWN\",\n\t\t\t\"ENETRESET\",\n\t\t\t\"ENETUNREACH\",\n\t\t\t\"ENFILE\",\n\t\t\t\"ENOBUFS\",\n\t\t\t\"ENODATA\",\n\t\t\t\"ENODEV\",\n\t\t\t\"ENOENT\",\n\t\t\t\"ENOEXEC\",\n\t\t\t\"ENOLCK\",\n\t\t\t\"ENOLINK\",\n\t\t\t\"ENOMEM\",\n\t\t\t\"ENOMSG\",\n\t\t\t\"ENOPROTOOPT\",\n\t\t\t\"ENOSPC\",\n\t\t\t\"ENOSR\",\n\t\t\t\"ENOSTR\",\n\t\t\t\"ENOSYS\",\n\t\t\t\"ENOTCONN\",\n\t\t\t\"ENOTDIR\",\n\t\t\t\"ENOTEMPTY\",\n\t\t\t\"ENOTSOCK\",\n\t\t\t\"ENOTSUP\",\n\t\t\t\"ENOTTY\",\n\t\t\t\"ENXIO\",\n\t\t\t\"EOPNOTSUPP\",\n\t\t\t\"EOVERFLOW\",\n\t\t\t\"EPERM\",\n\t\t\t\"EPIPE\",\n\t\t\t\"EPROTO\",\n\t\t\t\"EPROTONOSUPPORT\",\n\t\t\t\"EPROTOTYPE\",\n\t\t\t\"ERANGE\",\n\t\t\t\"EROFS\",\n\t\t\t\"ESPIPE\",\n\t\t\t\"ESRCH\",\n\t\t\t\"ESTALE\",\n\t\t\t\"ETIME\",\n\t\t\t\"ETIMEDOUT\",\n\t\t\t\"ETXTBSY\",\n\t\t\t\"EWOULDBLOCK\",\n\t\t\t\"EXDEV\",\n\t\t\t\"PRIORITY_LOW\",\n\t\t\t\"PRIORITY_BELOW_NORMAL\",\n\t\t\t\"PRIORITY_NORMAL\",\n\t\t\t\"PRIORITY_ABOVE_NORMAL\",\n\t\t\t\"PRIORITY_HIGH\",\n\t\t\t\"PRIORITY_HIGHEST\",\n\t\t\t\"SIGHUP\",\n\t\t\t\"SIGINT\",\n\t\t\t\"SIGQUIT\",\n\t\t\t\"SIGILL\",\n\t\t\t\"SIGTRAP\",\n\t\t\t\"SIGABRT\",\n\t\t\t\"SIGIOT\",\n\t\t\t\"SIGBUS\",\n\t\t\t\"SIGFPE\",\n\t\t\t\"SIGKILL\",\n\t\t\t\"SIGUSR1\",\n\t\t\t\"SIGSEGV\",\n\t\t\t\"SIGUSR2\",\n\t\t\t\"SIGPIPE\",\n\t\t\t\"SIGALRM\",\n\t\t\t\"SIGTERM\",\n\t\t\t\"SIGCHLD\",\n\t\t\t\"SIGCONT\",\n\t\t\t\"SIGSTOP\",\n\t\t\t\"SIGTSTP\",\n\t\t\t\"SIGTTIN\",\n\t\t\t\"SIGTTOU\",\n\t\t\t\"SIGURG\",\n\t\t\t\"SIGXCPU\",\n\t\t\t\"SIGXFSZ\",\n\t\t\t\"SIGVTALRM\",\n\t\t\t\"SIGPROF\",\n\t\t\t\"SIGWINCH\",\n\t\t\t\"SIGIO\",\n\t\t\t\"SIGINFO\",\n\t\t\t\"SIGSYS\",\n\t\t\t\"UV_FS_SYMLINK_DIR\",\n\t\t\t\"UV_FS_SYMLINK_JUNCTION\",\n\t\t\t\"O_RDONLY\",\n\t\t\t\"O_WRONLY\",\n\t\t\t\"O_RDWR\",\n\t\t\t\"UV_DIRENT_UNKNOWN\",\n\t\t\t\"UV_DIRENT_FILE\",\n\t\t\t\"UV_DIRENT_DIR\",\n\t\t\t\"UV_DIRENT_LINK\",\n\t\t\t\"UV_DIRENT_FIFO\",\n\t\t\t\"UV_DIRENT_SOCKET\",\n\t\t\t\"UV_DIRENT_CHAR\",\n\t\t\t\"UV_DIRENT_BLOCK\",\n\t\t\t\"EXTENSIONLESS_FORMAT_JAVASCRIPT\",\n\t\t\t\"EXTENSIONLESS_FORMAT_WASM\",\n\t\t\t\"S_IFMT\",\n\t\t\t\"S_IFREG\",\n\t\t\t\"S_IFDIR\",\n\t\t\t\"S_IFCHR\",\n\t\t\t\"S_IFBLK\",\n\t\t\t\"S_IFIFO\",\n\t\t\t\"S_IFLNK\",\n\t\t\t\"S_IFSOCK\",\n\t\t\t\"O_CREAT\",\n\t\t\t\"O_EXCL\",\n\t\t\t\"UV_FS_O_FILEMAP\",\n\t\t\t\"O_NOCTTY\",\n\t\t\t\"O_TRUNC\",\n\t\t\t\"O_APPEND\",\n\t\t\t\"O_DIRECTORY\",\n\t\t\t\"O_NOFOLLOW\",\n\t\t\t\"O_SYNC\",\n\t\t\t\"O_DSYNC\",\n\t\t\t\"O_SYMLINK\",\n\t\t\t\"O_NONBLOCK\",\n\t\t\t\"S_IRWXU\",\n\t\t\t\"S_IRUSR\",\n\t\t\t\"S_IWUSR\",\n\t\t\t\"S_IXUSR\",\n\t\t\t\"S_IRWXG\",\n\t\t\t\"S_IRGRP\",\n\t\t\t\"S_IWGRP\",\n\t\t\t\"S_IXGRP\",\n\t\t\t\"S_IRWXO\",\n\t\t\t\"S_IROTH\",\n\t\t\t\"S_IWOTH\",\n\t\t\t\"S_IXOTH\",\n\t\t\t\"F_OK\",\n\t\t\t\"R_OK\",\n\t\t\t\"W_OK\",\n\t\t\t\"X_OK\",\n\t\t\t\"UV_FS_COPYFILE_EXCL\",\n\t\t\t\"COPYFILE_EXCL\",\n\t\t\t\"UV_FS_COPYFILE_FICLONE\",\n\t\t\t\"COPYFILE_FICLONE\",\n\t\t\t\"UV_FS_COPYFILE_FICLONE_FORCE\",\n\t\t\t\"COPYFILE_FICLONE_FORCE\",\n\t\t\t\"OPENSSL_VERSION_NUMBER\",\n\t\t\t\"SSL_OP_ALL\",\n\t\t\t\"SSL_OP_ALLOW_NO_DHE_KEX\",\n\t\t\t\"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION\",\n\t\t\t\"SSL_OP_CIPHER_SERVER_PREFERENCE\",\n\t\t\t\"SSL_OP_CISCO_ANYCONNECT\",\n\t\t\t\"SSL_OP_COOKIE_EXCHANGE\",\n\t\t\t\"SSL_OP_CRYPTOPRO_TLSEXT_BUG\",\n\t\t\t\"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS\",\n\t\t\t\"SSL_OP_LEGACY_SERVER_CONNECT\",\n\t\t\t\"SSL_OP_NO_COMPRESSION\",\n\t\t\t\"SSL_OP_NO_ENCRYPT_THEN_MAC\",\n\t\t\t\"SSL_OP_NO_QUERY_MTU\",\n\t\t\t\"SSL_OP_NO_RENEGOTIATION\",\n\t\t\t\"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION\",\n\t\t\t\"SSL_OP_NO_SSLv2\",\n\t\t\t\"SSL_OP_NO_SSLv3\",\n\t\t\t\"SSL_OP_NO_TICKET\",\n\t\t\t\"SSL_OP_NO_TLSv1\",\n\t\t\t\"SSL_OP_NO_TLSv1_1\",\n\t\t\t\"SSL_OP_NO_TLSv1_2\",\n\t\t\t\"SSL_OP_NO_TLSv1_3\",\n\t\t\t\"SSL_OP_PRIORITIZE_CHACHA\",\n\t\t\t\"SSL_OP_TLS_ROLLBACK_BUG\",\n\t\t\t\"ENGINE_METHOD_RSA\",\n\t\t\t\"ENGINE_METHOD_DSA\",\n\t\t\t\"ENGINE_METHOD_DH\",\n\t\t\t\"ENGINE_METHOD_RAND\",\n\t\t\t\"ENGINE_METHOD_EC\",\n\t\t\t\"ENGINE_METHOD_CIPHERS\",\n\t\t\t\"ENGINE_METHOD_DIGESTS\",\n\t\t\t\"ENGINE_METHOD_PKEY_METHS\",\n\t\t\t\"ENGINE_METHOD_PKEY_ASN1_METHS\",\n\t\t\t\"ENGINE_METHOD_ALL\",\n\t\t\t\"ENGINE_METHOD_NONE\",\n\t\t\t\"DH_CHECK_P_NOT_SAFE_PRIME\",\n\t\t\t\"DH_CHECK_P_NOT_PRIME\",\n\t\t\t\"DH_UNABLE_TO_CHECK_GENERATOR\",\n\t\t\t\"DH_NOT_SUITABLE_GENERATOR\",\n\t\t\t\"RSA_PKCS1_PADDING\",\n\t\t\t\"RSA_NO_PADDING\",\n\t\t\t\"RSA_PKCS1_OAEP_PADDING\",\n\t\t\t\"RSA_X931_PADDING\",\n\t\t\t\"RSA_PKCS1_PSS_PADDING\",\n\t\t\t\"RSA_PSS_SALTLEN_DIGEST\",\n\t\t\t\"RSA_PSS_SALTLEN_MAX_SIGN\",\n\t\t\t\"RSA_PSS_SALTLEN_AUTO\",\n\t\t\t\"defaultCoreCipherList\",\n\t\t\t\"TLS1_VERSION\",\n\t\t\t\"TLS1_1_VERSION\",\n\t\t\t\"TLS1_2_VERSION\",\n\t\t\t\"TLS1_3_VERSION\",\n\t\t\t\"POINT_CONVERSION_COMPRESSED\",\n\t\t\t\"POINT_CONVERSION_UNCOMPRESSED\",\n\t\t\t\"POINT_CONVERSION_HYBRID\",\n\t\t\t\"defaultCipherList\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tcrypto: {\n\t\tnamedExports: new Set([\n\t\t\t\"checkPrime\",\n\t\t\t\"checkPrimeSync\",\n\t\t\t\"createCipheriv\",\n\t\t\t\"createDecipheriv\",\n\t\t\t\"createDiffieHellman\",\n\t\t\t\"createDiffieHellmanGroup\",\n\t\t\t\"createECDH\",\n\t\t\t\"createHash\",\n\t\t\t\"createHmac\",\n\t\t\t\"createPrivateKey\",\n\t\t\t\"createPublicKey\",\n\t\t\t\"createSecretKey\",\n\t\t\t\"createSign\",\n\t\t\t\"createVerify\",\n\t\t\t\"diffieHellman\",\n\t\t\t\"generatePrime\",\n\t\t\t\"generatePrimeSync\",\n\t\t\t\"getCiphers\",\n\t\t\t\"getCipherInfo\",\n\t\t\t\"getCurves\",\n\t\t\t\"getDiffieHellman\",\n\t\t\t\"getHashes\",\n\t\t\t\"hkdf\",\n\t\t\t\"hkdfSync\",\n\t\t\t\"pbkdf2\",\n\t\t\t\"pbkdf2Sync\",\n\t\t\t\"generateKeyPair\",\n\t\t\t\"generateKeyPairSync\",\n\t\t\t\"generateKey\",\n\t\t\t\"generateKeySync\",\n\t\t\t\"privateDecrypt\",\n\t\t\t\"privateEncrypt\",\n\t\t\t\"publicDecrypt\",\n\t\t\t\"publicEncrypt\",\n\t\t\t\"randomBytes\",\n\t\t\t\"randomFill\",\n\t\t\t\"randomFillSync\",\n\t\t\t\"randomInt\",\n\t\t\t\"randomUUID\",\n\t\t\t\"scrypt\",\n\t\t\t\"scryptSync\",\n\t\t\t\"sign\",\n\t\t\t\"setEngine\",\n\t\t\t\"timingSafeEqual\",\n\t\t\t\"getFips\",\n\t\t\t\"setFips\",\n\t\t\t\"verify\",\n\t\t\t\"hash\",\n\t\t\t\"Certificate\",\n\t\t\t\"Cipher\",\n\t\t\t\"Cipheriv\",\n\t\t\t\"Decipher\",\n\t\t\t\"Decipheriv\",\n\t\t\t\"DiffieHellman\",\n\t\t\t\"DiffieHellmanGroup\",\n\t\t\t\"ECDH\",\n\t\t\t\"Hash\",\n\t\t\t\"Hmac\",\n\t\t\t\"KeyObject\",\n\t\t\t\"Sign\",\n\t\t\t\"Verify\",\n\t\t\t\"X509Certificate\",\n\t\t\t\"secureHeapUsed\",\n\t\t\t\"constants\",\n\t\t\t\"webcrypto\",\n\t\t\t\"subtle\",\n\t\t\t\"getRandomValues\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tdgram: {\n\t\tnamedExports: new Set([\"createSocket\", \"Socket\"]),\n\t\thasDefaultExport: true\n\t},\n\tdiagnostics_channel: {\n\t\tnamedExports: new Set([\"channel\", \"hasSubscribers\", \"subscribe\", \"tracingChannel\", \"unsubscribe\", \"Channel\"]),\n\t\thasDefaultExport: true\n\t},\n\tdns: {\n\t\tnamedExports: new Set([\n\t\t\t\"lookup\",\n\t\t\t\"lookupService\",\n\t\t\t\"Resolver\",\n\t\t\t\"getDefaultResultOrder\",\n\t\t\t\"setDefaultResultOrder\",\n\t\t\t\"setServers\",\n\t\t\t\"ADDRCONFIG\",\n\t\t\t\"ALL\",\n\t\t\t\"V4MAPPED\",\n\t\t\t\"NODATA\",\n\t\t\t\"FORMERR\",\n\t\t\t\"SERVFAIL\",\n\t\t\t\"NOTFOUND\",\n\t\t\t\"NOTIMP\",\n\t\t\t\"REFUSED\",\n\t\t\t\"BADQUERY\",\n\t\t\t\"BADNAME\",\n\t\t\t\"BADFAMILY\",\n\t\t\t\"BADRESP\",\n\t\t\t\"CONNREFUSED\",\n\t\t\t\"TIMEOUT\",\n\t\t\t\"EOF\",\n\t\t\t\"FILE\",\n\t\t\t\"NOMEM\",\n\t\t\t\"DESTRUCTION\",\n\t\t\t\"BADSTR\",\n\t\t\t\"BADFLAGS\",\n\t\t\t\"NONAME\",\n\t\t\t\"BADHINTS\",\n\t\t\t\"NOTINITIALIZED\",\n\t\t\t\"LOADIPHLPAPI\",\n\t\t\t\"ADDRGETNETWORKPARAMS\",\n\t\t\t\"CANCELLED\",\n\t\t\t\"getServers\",\n\t\t\t\"resolve\",\n\t\t\t\"resolve4\",\n\t\t\t\"resolve6\",\n\t\t\t\"resolveAny\",\n\t\t\t\"resolveCaa\",\n\t\t\t\"resolveCname\",\n\t\t\t\"resolveMx\",\n\t\t\t\"resolveNaptr\",\n\t\t\t\"resolveNs\",\n\t\t\t\"resolvePtr\",\n\t\t\t\"resolveSoa\",\n\t\t\t\"resolveSrv\",\n\t\t\t\"resolveTxt\",\n\t\t\t\"reverse\",\n\t\t\t\"promises\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\t\"dns/promises\": {\n\t\tnamedExports: new Set([\n\t\t\t\"lookup\",\n\t\t\t\"lookupService\",\n\t\t\t\"Resolver\",\n\t\t\t\"getDefaultResultOrder\",\n\t\t\t\"setDefaultResultOrder\",\n\t\t\t\"setServers\",\n\t\t\t\"NODATA\",\n\t\t\t\"FORMERR\",\n\t\t\t\"SERVFAIL\",\n\t\t\t\"NOTFOUND\",\n\t\t\t\"NOTIMP\",\n\t\t\t\"REFUSED\",\n\t\t\t\"BADQUERY\",\n\t\t\t\"BADNAME\",\n\t\t\t\"BADFAMILY\",\n\t\t\t\"BADRESP\",\n\t\t\t\"CONNREFUSED\",\n\t\t\t\"TIMEOUT\",\n\t\t\t\"EOF\",\n\t\t\t\"FILE\",\n\t\t\t\"NOMEM\",\n\t\t\t\"DESTRUCTION\",\n\t\t\t\"BADSTR\",\n\t\t\t\"BADFLAGS\",\n\t\t\t\"NONAME\",\n\t\t\t\"BADHINTS\",\n\t\t\t\"NOTINITIALIZED\",\n\t\t\t\"LOADIPHLPAPI\",\n\t\t\t\"ADDRGETNETWORKPARAMS\",\n\t\t\t\"CANCELLED\",\n\t\t\t\"getServers\",\n\t\t\t\"resolve\",\n\t\t\t\"resolve4\",\n\t\t\t\"resolve6\",\n\t\t\t\"resolveAny\",\n\t\t\t\"resolveCaa\",\n\t\t\t\"resolveCname\",\n\t\t\t\"resolveMx\",\n\t\t\t\"resolveNaptr\",\n\t\t\t\"resolveNs\",\n\t\t\t\"resolvePtr\",\n\t\t\t\"resolveSoa\",\n\t\t\t\"resolveSrv\",\n\t\t\t\"resolveTxt\",\n\t\t\t\"reverse\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tdomain: {\n\t\tnamedExports: new Set([\"Domain\", \"createDomain\", \"create\", \"active\"]),\n\t\thasDefaultExport: true\n\t},\n\tevents: {\n\t\tnamedExports: new Set([]),\n\t\thasDefaultExport: true\n\t},\n\tfs: {\n\t\tnamedExports: new Set([\n\t\t\t\"appendFile\",\n\t\t\t\"appendFileSync\",\n\t\t\t\"access\",\n\t\t\t\"accessSync\",\n\t\t\t\"chown\",\n\t\t\t\"chownSync\",\n\t\t\t\"chmod\",\n\t\t\t\"chmodSync\",\n\t\t\t\"close\",\n\t\t\t\"closeSync\",\n\t\t\t\"copyFile\",\n\t\t\t\"copyFileSync\",\n\t\t\t\"cp\",\n\t\t\t\"cpSync\",\n\t\t\t\"createReadStream\",\n\t\t\t\"createWriteStream\",\n\t\t\t\"exists\",\n\t\t\t\"existsSync\",\n\t\t\t\"fchown\",\n\t\t\t\"fchownSync\",\n\t\t\t\"fchmod\",\n\t\t\t\"fchmodSync\",\n\t\t\t\"fdatasync\",\n\t\t\t\"fdatasyncSync\",\n\t\t\t\"fstat\",\n\t\t\t\"fstatSync\",\n\t\t\t\"fsync\",\n\t\t\t\"fsyncSync\",\n\t\t\t\"ftruncate\",\n\t\t\t\"ftruncateSync\",\n\t\t\t\"futimes\",\n\t\t\t\"futimesSync\",\n\t\t\t\"glob\",\n\t\t\t\"globSync\",\n\t\t\t\"lchown\",\n\t\t\t\"lchownSync\",\n\t\t\t\"lchmod\",\n\t\t\t\"lchmodSync\",\n\t\t\t\"link\",\n\t\t\t\"linkSync\",\n\t\t\t\"lstat\",\n\t\t\t\"lstatSync\",\n\t\t\t\"lutimes\",\n\t\t\t\"lutimesSync\",\n\t\t\t\"mkdir\",\n\t\t\t\"mkdirSync\",\n\t\t\t\"mkdtemp\",\n\t\t\t\"mkdtempSync\",\n\t\t\t\"open\",\n\t\t\t\"openSync\",\n\t\t\t\"openAsBlob\",\n\t\t\t\"readdir\",\n\t\t\t\"readdirSync\",\n\t\t\t\"read\",\n\t\t\t\"readSync\",\n\t\t\t\"readv\",\n\t\t\t\"readvSync\",\n\t\t\t\"readFile\",\n\t\t\t\"readFileSync\",\n\t\t\t\"readlink\",\n\t\t\t\"readlinkSync\",\n\t\t\t\"realpath\",\n\t\t\t\"realpathSync\",\n\t\t\t\"rename\",\n\t\t\t\"renameSync\",\n\t\t\t\"rm\",\n\t\t\t\"rmSync\",\n\t\t\t\"rmdir\",\n\t\t\t\"rmdirSync\",\n\t\t\t\"stat\",\n\t\t\t\"statfs\",\n\t\t\t\"statSync\",\n\t\t\t\"statfsSync\",\n\t\t\t\"symlink\",\n\t\t\t\"symlinkSync\",\n\t\t\t\"truncate\",\n\t\t\t\"truncateSync\",\n\t\t\t\"unwatchFile\",\n\t\t\t\"unlink\",\n\t\t\t\"unlinkSync\",\n\t\t\t\"utimes\",\n\t\t\t\"utimesSync\",\n\t\t\t\"watch\",\n\t\t\t\"watchFile\",\n\t\t\t\"writeFile\",\n\t\t\t\"writeFileSync\",\n\t\t\t\"write\",\n\t\t\t\"writeSync\",\n\t\t\t\"writev\",\n\t\t\t\"writevSync\",\n\t\t\t\"Dirent\",\n\t\t\t\"Stats\",\n\t\t\t\"ReadStream\",\n\t\t\t\"WriteStream\",\n\t\t\t\"FileReadStream\",\n\t\t\t\"FileWriteStream\",\n\t\t\t\"Dir\",\n\t\t\t\"opendir\",\n\t\t\t\"opendirSync\",\n\t\t\t\"F_OK\",\n\t\t\t\"R_OK\",\n\t\t\t\"W_OK\",\n\t\t\t\"X_OK\",\n\t\t\t\"constants\",\n\t\t\t\"promises\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\t\"fs/promises\": {\n\t\tnamedExports: new Set([\n\t\t\t\"access\",\n\t\t\t\"copyFile\",\n\t\t\t\"cp\",\n\t\t\t\"glob\",\n\t\t\t\"open\",\n\t\t\t\"opendir\",\n\t\t\t\"rename\",\n\t\t\t\"truncate\",\n\t\t\t\"rm\",\n\t\t\t\"rmdir\",\n\t\t\t\"mkdir\",\n\t\t\t\"readdir\",\n\t\t\t\"readlink\",\n\t\t\t\"symlink\",\n\t\t\t\"lstat\",\n\t\t\t\"stat\",\n\t\t\t\"statfs\",\n\t\t\t\"link\",\n\t\t\t\"unlink\",\n\t\t\t\"chmod\",\n\t\t\t\"lchmod\",\n\t\t\t\"lchown\",\n\t\t\t\"chown\",\n\t\t\t\"utimes\",\n\t\t\t\"lutimes\",\n\t\t\t\"realpath\",\n\t\t\t\"mkdtemp\",\n\t\t\t\"writeFile\",\n\t\t\t\"appendFile\",\n\t\t\t\"readFile\",\n\t\t\t\"watch\",\n\t\t\t\"constants\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\thttp: {\n\t\tnamedExports: new Set([\n\t\t\t\"METHODS\",\n\t\t\t\"STATUS_CODES\",\n\t\t\t\"Agent\",\n\t\t\t\"ClientRequest\",\n\t\t\t\"IncomingMessage\",\n\t\t\t\"OutgoingMessage\",\n\t\t\t\"Server\",\n\t\t\t\"ServerResponse\",\n\t\t\t\"createServer\",\n\t\t\t\"validateHeaderName\",\n\t\t\t\"validateHeaderValue\",\n\t\t\t\"get\",\n\t\t\t\"request\",\n\t\t\t\"setMaxIdleHTTPParsers\",\n\t\t\t\"maxHeaderSize\",\n\t\t\t\"globalAgent\",\n\t\t\t\"WebSocket\",\n\t\t\t\"CloseEvent\",\n\t\t\t\"MessageEvent\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\thttp2: {\n\t\tnamedExports: new Set([\n\t\t\t\"connect\",\n\t\t\t\"constants\",\n\t\t\t\"createServer\",\n\t\t\t\"createSecureServer\",\n\t\t\t\"getDefaultSettings\",\n\t\t\t\"getPackedSettings\",\n\t\t\t\"getUnpackedSettings\",\n\t\t\t\"performServerHandshake\",\n\t\t\t\"sensitiveHeaders\",\n\t\t\t\"Http2ServerRequest\",\n\t\t\t\"Http2ServerResponse\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\thttps: {\n\t\tnamedExports: new Set([\"Agent\", \"globalAgent\", \"Server\", \"createServer\", \"get\", \"request\"]),\n\t\thasDefaultExport: true\n\t},\n\tinspector: {\n\t\tnamedExports: new Set([\"open\", \"close\", \"url\", \"waitForDebugger\", \"console\", \"Session\", \"Network\"]),\n\t\thasDefaultExport: true\n\t},\n\t\"inspector/promises\": {\n\t\tnamedExports: new Set([\"open\", \"close\", \"url\", \"waitForDebugger\", \"console\", \"Session\", \"Network\"]),\n\t\thasDefaultExport: true\n\t},\n\tmodule: {\n\t\tnamedExports: new Set([]),\n\t\thasDefaultExport: true\n\t},\n\tnet: {\n\t\tnamedExports: new Set([\n\t\t\t\"BlockList\",\n\t\t\t\"SocketAddress\",\n\t\t\t\"connect\",\n\t\t\t\"createConnection\",\n\t\t\t\"createServer\",\n\t\t\t\"isIP\",\n\t\t\t\"isIPv4\",\n\t\t\t\"isIPv6\",\n\t\t\t\"Server\",\n\t\t\t\"Socket\",\n\t\t\t\"Stream\",\n\t\t\t\"getDefaultAutoSelectFamily\",\n\t\t\t\"setDefaultAutoSelectFamily\",\n\t\t\t\"getDefaultAutoSelectFamilyAttemptTimeout\",\n\t\t\t\"setDefaultAutoSelectFamilyAttemptTimeout\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tos: {\n\t\tnamedExports: new Set([\n\t\t\t\"arch\",\n\t\t\t\"availableParallelism\",\n\t\t\t\"cpus\",\n\t\t\t\"endianness\",\n\t\t\t\"freemem\",\n\t\t\t\"getPriority\",\n\t\t\t\"homedir\",\n\t\t\t\"hostname\",\n\t\t\t\"loadavg\",\n\t\t\t\"networkInterfaces\",\n\t\t\t\"platform\",\n\t\t\t\"release\",\n\t\t\t\"setPriority\",\n\t\t\t\"tmpdir\",\n\t\t\t\"totalmem\",\n\t\t\t\"type\",\n\t\t\t\"userInfo\",\n\t\t\t\"uptime\",\n\t\t\t\"version\",\n\t\t\t\"machine\",\n\t\t\t\"constants\",\n\t\t\t\"EOL\",\n\t\t\t\"devNull\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tpath: {\n\t\tnamedExports: new Set([\n\t\t\t\"resolve\",\n\t\t\t\"normalize\",\n\t\t\t\"isAbsolute\",\n\t\t\t\"join\",\n\t\t\t\"relative\",\n\t\t\t\"toNamespacedPath\",\n\t\t\t\"dirname\",\n\t\t\t\"basename\",\n\t\t\t\"extname\",\n\t\t\t\"format\",\n\t\t\t\"parse\",\n\t\t\t\"matchesGlob\",\n\t\t\t\"sep\",\n\t\t\t\"delimiter\",\n\t\t\t\"win32\",\n\t\t\t\"posix\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\t\"path/posix\": {\n\t\tnamedExports: new Set([\n\t\t\t\"resolve\",\n\t\t\t\"normalize\",\n\t\t\t\"isAbsolute\",\n\t\t\t\"join\",\n\t\t\t\"relative\",\n\t\t\t\"toNamespacedPath\",\n\t\t\t\"dirname\",\n\t\t\t\"basename\",\n\t\t\t\"extname\",\n\t\t\t\"format\",\n\t\t\t\"parse\",\n\t\t\t\"matchesGlob\",\n\t\t\t\"sep\",\n\t\t\t\"delimiter\",\n\t\t\t\"win32\",\n\t\t\t\"posix\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\t\"path/win32\": {\n\t\tnamedExports: new Set([\n\t\t\t\"resolve\",\n\t\t\t\"normalize\",\n\t\t\t\"isAbsolute\",\n\t\t\t\"join\",\n\t\t\t\"relative\",\n\t\t\t\"toNamespacedPath\",\n\t\t\t\"dirname\",\n\t\t\t\"basename\",\n\t\t\t\"extname\",\n\t\t\t\"format\",\n\t\t\t\"parse\",\n\t\t\t\"matchesGlob\",\n\t\t\t\"sep\",\n\t\t\t\"delimiter\",\n\t\t\t\"win32\",\n\t\t\t\"posix\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tperf_hooks: {\n\t\tnamedExports: new Set([\n\t\t\t\"Performance\",\n\t\t\t\"PerformanceEntry\",\n\t\t\t\"PerformanceMark\",\n\t\t\t\"PerformanceMeasure\",\n\t\t\t\"PerformanceObserver\",\n\t\t\t\"PerformanceObserverEntryList\",\n\t\t\t\"PerformanceResourceTiming\",\n\t\t\t\"monitorEventLoopDelay\",\n\t\t\t\"createHistogram\",\n\t\t\t\"performance\",\n\t\t\t\"constants\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tprocess: {\n\t\tnamedExports: new Set([\n\t\t\t\"version\",\n\t\t\t\"versions\",\n\t\t\t\"arch\",\n\t\t\t\"platform\",\n\t\t\t\"release\",\n\t\t\t\"moduleLoadList\",\n\t\t\t\"binding\",\n\t\t\t\"domain\",\n\t\t\t\"exitCode\",\n\t\t\t\"config\",\n\t\t\t\"dlopen\",\n\t\t\t\"uptime\",\n\t\t\t\"getActiveResourcesInfo\",\n\t\t\t\"reallyExit\",\n\t\t\t\"loadEnvFile\",\n\t\t\t\"cpuUsage\",\n\t\t\t\"resourceUsage\",\n\t\t\t\"memoryUsage\",\n\t\t\t\"constrainedMemory\",\n\t\t\t\"availableMemory\",\n\t\t\t\"kill\",\n\t\t\t\"exit\",\n\t\t\t\"finalization\",\n\t\t\t\"hrtime\",\n\t\t\t\"openStdin\",\n\t\t\t\"getuid\",\n\t\t\t\"geteuid\",\n\t\t\t\"getgid\",\n\t\t\t\"getegid\",\n\t\t\t\"getgroups\",\n\t\t\t\"allowedNodeEnvironmentFlags\",\n\t\t\t\"assert\",\n\t\t\t\"features\",\n\t\t\t\"setUncaughtExceptionCaptureCallback\",\n\t\t\t\"hasUncaughtExceptionCaptureCallback\",\n\t\t\t\"emitWarning\",\n\t\t\t\"nextTick\",\n\t\t\t\"sourceMapsEnabled\",\n\t\t\t\"setSourceMapsEnabled\",\n\t\t\t\"getBuiltinModule\",\n\t\t\t\"stdout\",\n\t\t\t\"stdin\",\n\t\t\t\"stderr\",\n\t\t\t\"abort\",\n\t\t\t\"umask\",\n\t\t\t\"chdir\",\n\t\t\t\"cwd\",\n\t\t\t\"initgroups\",\n\t\t\t\"setgroups\",\n\t\t\t\"setegid\",\n\t\t\t\"seteuid\",\n\t\t\t\"setgid\",\n\t\t\t\"setuid\",\n\t\t\t\"env\",\n\t\t\t\"title\",\n\t\t\t\"argv\",\n\t\t\t\"execArgv\",\n\t\t\t\"pid\",\n\t\t\t\"ppid\",\n\t\t\t\"execPath\",\n\t\t\t\"debugPort\",\n\t\t\t\"argv0\",\n\t\t\t\"report\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tpunycode: {\n\t\tnamedExports: new Set([\"version\", \"ucs2\", \"decode\", \"encode\", \"toASCII\", \"toUnicode\"]),\n\t\thasDefaultExport: true\n\t},\n\tquerystring: {\n\t\tnamedExports: new Set([\"unescapeBuffer\", \"unescape\", \"escape\", \"stringify\", \"encode\", \"parse\", \"decode\"]),\n\t\thasDefaultExport: true\n\t},\n\treadline: {\n\t\tnamedExports: new Set([\"Interface\", \"clearLine\", \"clearScreenDown\", \"createInterface\", \"cursorTo\", \"emitKeypressEvents\", \"moveCursor\", \"promises\"]),\n\t\thasDefaultExport: true\n\t},\n\t\"readline/promises\": {\n\t\tnamedExports: new Set([\"Interface\", \"Readline\", \"createInterface\"]),\n\t\thasDefaultExport: true\n\t},\n\trepl: {\n\t\tnamedExports: new Set([\"start\", \"writer\", \"REPLServer\", \"REPL_MODE_SLOPPY\", \"REPL_MODE_STRICT\", \"Recoverable\", \"builtinModules\"]),\n\t\thasDefaultExport: true\n\t},\n\tstream: {\n\t\tnamedExports: new Set([]),\n\t\thasDefaultExport: true\n\t},\n\t\"stream/consumers\": {\n\t\tnamedExports: new Set([\"arrayBuffer\", \"blob\", \"buffer\", \"text\", \"json\"]),\n\t\thasDefaultExport: true\n\t},\n\t\"stream/promises\": {\n\t\tnamedExports: new Set([\"finished\", \"pipeline\"]),\n\t\thasDefaultExport: true\n\t},\n\t\"stream/web\": {\n\t\tnamedExports: new Set([\n\t\t\t\"ReadableStream\",\n\t\t\t\"ReadableStreamDefaultReader\",\n\t\t\t\"ReadableStreamBYOBReader\",\n\t\t\t\"ReadableStreamBYOBRequest\",\n\t\t\t\"ReadableByteStreamController\",\n\t\t\t\"ReadableStreamDefaultController\",\n\t\t\t\"TransformStream\",\n\t\t\t\"TransformStreamDefaultController\",\n\t\t\t\"WritableStream\",\n\t\t\t\"WritableStreamDefaultWriter\",\n\t\t\t\"WritableStreamDefaultController\",\n\t\t\t\"ByteLengthQueuingStrategy\",\n\t\t\t\"CountQueuingStrategy\",\n\t\t\t\"TextEncoderStream\",\n\t\t\t\"TextDecoderStream\",\n\t\t\t\"CompressionStream\",\n\t\t\t\"DecompressionStream\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tstring_decoder: {\n\t\tnamedExports: new Set([\"StringDecoder\"]),\n\t\thasDefaultExport: true\n\t},\n\ttimers: {\n\t\tnamedExports: new Set([\"setTimeout\", \"clearTimeout\", \"setImmediate\", \"clearImmediate\", \"setInterval\", \"clearInterval\", \"active\", \"unenroll\", \"enroll\", \"promises\"]),\n\t\thasDefaultExport: true\n\t},\n\t\"timers/promises\": {\n\t\tnamedExports: new Set([\"setTimeout\", \"setImmediate\", \"setInterval\", \"scheduler\"]),\n\t\thasDefaultExport: true\n\t},\n\ttls: {\n\t\tnamedExports: new Set([\n\t\t\t\"CLIENT_RENEG_LIMIT\",\n\t\t\t\"CLIENT_RENEG_WINDOW\",\n\t\t\t\"DEFAULT_CIPHERS\",\n\t\t\t\"DEFAULT_ECDH_CURVE\",\n\t\t\t\"DEFAULT_MIN_VERSION\",\n\t\t\t\"DEFAULT_MAX_VERSION\",\n\t\t\t\"getCiphers\",\n\t\t\t\"rootCertificates\",\n\t\t\t\"convertALPNProtocols\",\n\t\t\t\"checkServerIdentity\",\n\t\t\t\"createSecureContext\",\n\t\t\t\"SecureContext\",\n\t\t\t\"TLSSocket\",\n\t\t\t\"Server\",\n\t\t\t\"createServer\",\n\t\t\t\"connect\",\n\t\t\t\"createSecurePair\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\ttrace_events: {\n\t\tnamedExports: new Set([\"createTracing\", \"getEnabledCategories\"]),\n\t\thasDefaultExport: true\n\t},\n\ttty: {\n\t\tnamedExports: new Set([\"isatty\", \"ReadStream\", \"WriteStream\"]),\n\t\thasDefaultExport: true\n\t},\n\turl: {\n\t\tnamedExports: new Set([\n\t\t\t\"Url\",\n\t\t\t\"parse\",\n\t\t\t\"resolve\",\n\t\t\t\"resolveObject\",\n\t\t\t\"format\",\n\t\t\t\"URL\",\n\t\t\t\"URLSearchParams\",\n\t\t\t\"domainToASCII\",\n\t\t\t\"domainToUnicode\",\n\t\t\t\"pathToFileURL\",\n\t\t\t\"fileURLToPath\",\n\t\t\t\"urlToHttpOptions\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tutil: {\n\t\tnamedExports: new Set([\n\t\t\t\"callbackify\",\n\t\t\t\"debug\",\n\t\t\t\"debuglog\",\n\t\t\t\"deprecate\",\n\t\t\t\"format\",\n\t\t\t\"styleText\",\n\t\t\t\"formatWithOptions\",\n\t\t\t\"getCallSite\",\n\t\t\t\"getSystemErrorMap\",\n\t\t\t\"getSystemErrorName\",\n\t\t\t\"inherits\",\n\t\t\t\"inspect\",\n\t\t\t\"isArray\",\n\t\t\t\"isBoolean\",\n\t\t\t\"isBuffer\",\n\t\t\t\"isDeepStrictEqual\",\n\t\t\t\"isNull\",\n\t\t\t\"isNullOrUndefined\",\n\t\t\t\"isNumber\",\n\t\t\t\"isString\",\n\t\t\t\"isSymbol\",\n\t\t\t\"isUndefined\",\n\t\t\t\"isRegExp\",\n\t\t\t\"isObject\",\n\t\t\t\"isDate\",\n\t\t\t\"isError\",\n\t\t\t\"isFunction\",\n\t\t\t\"isPrimitive\",\n\t\t\t\"log\",\n\t\t\t\"promisify\",\n\t\t\t\"stripVTControlCharacters\",\n\t\t\t\"toUSVString\",\n\t\t\t\"transferableAbortSignal\",\n\t\t\t\"transferableAbortController\",\n\t\t\t\"aborted\",\n\t\t\t\"types\",\n\t\t\t\"parseEnv\",\n\t\t\t\"parseArgs\",\n\t\t\t\"TextDecoder\",\n\t\t\t\"TextEncoder\",\n\t\t\t\"MIMEType\",\n\t\t\t\"MIMEParams\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\t\"util/types\": {\n\t\tnamedExports: new Set([\n\t\t\t\"isExternal\",\n\t\t\t\"isDate\",\n\t\t\t\"isArgumentsObject\",\n\t\t\t\"isBigIntObject\",\n\t\t\t\"isBooleanObject\",\n\t\t\t\"isNumberObject\",\n\t\t\t\"isStringObject\",\n\t\t\t\"isSymbolObject\",\n\t\t\t\"isNativeError\",\n\t\t\t\"isRegExp\",\n\t\t\t\"isAsyncFunction\",\n\t\t\t\"isGeneratorFunction\",\n\t\t\t\"isGeneratorObject\",\n\t\t\t\"isPromise\",\n\t\t\t\"isMap\",\n\t\t\t\"isSet\",\n\t\t\t\"isMapIterator\",\n\t\t\t\"isSetIterator\",\n\t\t\t\"isWeakMap\",\n\t\t\t\"isWeakSet\",\n\t\t\t\"isArrayBuffer\",\n\t\t\t\"isDataView\",\n\t\t\t\"isSharedArrayBuffer\",\n\t\t\t\"isProxy\",\n\t\t\t\"isModuleNamespaceObject\",\n\t\t\t\"isAnyArrayBuffer\",\n\t\t\t\"isBoxedPrimitive\",\n\t\t\t\"isArrayBufferView\",\n\t\t\t\"isTypedArray\",\n\t\t\t\"isUint8Array\",\n\t\t\t\"isUint8ClampedArray\",\n\t\t\t\"isUint16Array\",\n\t\t\t\"isUint32Array\",\n\t\t\t\"isInt8Array\",\n\t\t\t\"isInt16Array\",\n\t\t\t\"isInt32Array\",\n\t\t\t\"isFloat32Array\",\n\t\t\t\"isFloat64Array\",\n\t\t\t\"isBigInt64Array\",\n\t\t\t\"isBigUint64Array\",\n\t\t\t\"isKeyObject\",\n\t\t\t\"isCryptoKey\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tv8: {\n\t\tnamedExports: new Set([\n\t\t\t\"cachedDataVersionTag\",\n\t\t\t\"getHeapSnapshot\",\n\t\t\t\"getHeapStatistics\",\n\t\t\t\"getHeapSpaceStatistics\",\n\t\t\t\"getHeapCodeStatistics\",\n\t\t\t\"setFlagsFromString\",\n\t\t\t\"Serializer\",\n\t\t\t\"Deserializer\",\n\t\t\t\"DefaultSerializer\",\n\t\t\t\"DefaultDeserializer\",\n\t\t\t\"deserialize\",\n\t\t\t\"takeCoverage\",\n\t\t\t\"stopCoverage\",\n\t\t\t\"serialize\",\n\t\t\t\"writeHeapSnapshot\",\n\t\t\t\"promiseHooks\",\n\t\t\t\"queryObjects\",\n\t\t\t\"startupSnapshot\",\n\t\t\t\"setHeapSnapshotNearHeapLimit\",\n\t\t\t\"GCProfiler\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tvm: {\n\t\tnamedExports: new Set([\n\t\t\t\"Script\",\n\t\t\t\"createContext\",\n\t\t\t\"createScript\",\n\t\t\t\"runInContext\",\n\t\t\t\"runInNewContext\",\n\t\t\t\"runInThisContext\",\n\t\t\t\"isContext\",\n\t\t\t\"compileFunction\",\n\t\t\t\"measureMemory\",\n\t\t\t\"constants\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\twasi: {\n\t\tnamedExports: new Set([\"WASI\"]),\n\t\thasDefaultExport: true\n\t},\n\tworker_threads: {\n\t\tnamedExports: new Set([\n\t\t\t\"isMainThread\",\n\t\t\t\"MessagePort\",\n\t\t\t\"MessageChannel\",\n\t\t\t\"markAsUntransferable\",\n\t\t\t\"isMarkedAsUntransferable\",\n\t\t\t\"moveMessagePortToContext\",\n\t\t\t\"receiveMessageOnPort\",\n\t\t\t\"resourceLimits\",\n\t\t\t\"postMessageToThread\",\n\t\t\t\"threadId\",\n\t\t\t\"SHARE_ENV\",\n\t\t\t\"Worker\",\n\t\t\t\"parentPort\",\n\t\t\t\"workerData\",\n\t\t\t\"BroadcastChannel\",\n\t\t\t\"setEnvironmentData\",\n\t\t\t\"getEnvironmentData\"\n\t\t]),\n\t\thasDefaultExport: true\n\t},\n\tzlib: {\n\t\tnamedExports: new Set([\n\t\t\t\"crc32\",\n\t\t\t\"Deflate\",\n\t\t\t\"Inflate\",\n\t\t\t\"Gzip\",\n\t\t\t\"Gunzip\",\n\t\t\t\"DeflateRaw\",\n\t\t\t\"InflateRaw\",\n\t\t\t\"Unzip\",\n\t\t\t\"BrotliCompress\",\n\t\t\t\"BrotliDecompress\",\n\t\t\t\"deflate\",\n\t\t\t\"deflateSync\",\n\t\t\t\"gzip\",\n\t\t\t\"gzipSync\",\n\t\t\t\"deflateRaw\",\n\t\t\t\"deflateRawSync\",\n\t\t\t\"unzip\",\n\t\t\t\"unzipSync\",\n\t\t\t\"inflate\",\n\t\t\t\"inflateSync\",\n\t\t\t\"gunzip\",\n\t\t\t\"gunzipSync\",\n\t\t\t\"inflateRaw\",\n\t\t\t\"inflateRawSync\",\n\t\t\t\"brotliCompress\",\n\t\t\t\"brotliCompressSync\",\n\t\t\t\"brotliDecompress\",\n\t\t\t\"brotliDecompressSync\",\n\t\t\t\"createDeflate\",\n\t\t\t\"createInflate\",\n\t\t\t\"createDeflateRaw\",\n\t\t\t\"createInflateRaw\",\n\t\t\t\"createGzip\",\n\t\t\t\"createGunzip\",\n\t\t\t\"createUnzip\",\n\t\t\t\"createBrotliCompress\",\n\t\t\t\"createBrotliDecompress\",\n\t\t\t\"constants\",\n\t\t\t\"codes\"\n\t\t]),\n\t\thasDefaultExport: true\n\t}\n};\n","import {ensureHasLeadingDotAndPosix, isExternalLibrary, setExtension} from \"./path-util.js\";\nimport type {VisitorContext} from \"../visitor-context.js\";\nimport path from \"crosspath\";\n\nexport interface TransformModuleSpecifierOptions {\n\tcontext: VisitorContext;\n\tparent: string;\n\tresolvedModuleSpecifier: string | undefined;\n}\n\nfunction determineNewExtension(currentExtension: string): string {\n\tswitch (currentExtension) {\n\t\tcase \".ts\":\n\t\tcase \".tsx\":\n\t\tcase \".d.ts\":\n\t\tcase \".d.mts\":\n\t\tcase \".js\":\n\t\tcase \".jsx\":\n\t\tcase \".cjs\":\n\t\tcase \".cjsx\":\n\t\tcase \".cts\":\n\t\t\treturn \".js\";\n\t\tcase \".mjs\":\n\t\tcase \".mts\":\n\t\tcase \".mjsx\":\n\t\tcase \".d.cts\":\n\t\t\treturn \".mjs\";\n\t\tdefault:\n\t\t\treturn currentExtension;\n\t}\n}\n\n/**\n * Converts the given module specifier to one that is supported by target runtime, based on the given context options\n */\nexport function transformModuleSpecifier(moduleSpecifier: string, {context, parent, resolvedModuleSpecifier}: TransformModuleSpecifierOptions): string {\n\t// If the module specifier already contains an extension, do nothing else\n\tif (path.extname(moduleSpecifier) !== \"\" || resolvedModuleSpecifier == null) {\n\t\treturn moduleSpecifier;\n\t}\n\n\tswitch (context.preserveModuleSpecifiers) {\n\t\tcase \"always\":\n\t\t\treturn moduleSpecifier;\n\t\tcase \"never\":\n\t\t\tbreak;\n\t\tcase \"external\":\n\t\t\tif (isExternalLibrary(moduleSpecifier)) {\n\t\t\t\treturn moduleSpecifier;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"internal\":\n\t\t\tif (!isExternalLibrary(moduleSpecifier)) {\n\t\t\t\treturn moduleSpecifier;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (context.preserveModuleSpecifiers(moduleSpecifier)) {\n\t\t\t\treturn moduleSpecifier;\n\t\t\t}\n\t}\n\n\treturn setExtension(ensureHasLeadingDotAndPosix(path.relative(path.dirname(parent), resolvedModuleSpecifier)), determineNewExtension(path.extname(resolvedModuleSpecifier)));\n}\n","import type {VisitorContext} from \"../visitor-context.js\";\nimport {resolvePath} from \"./resolve-path.js\";\nimport {walkThroughFillerNodes} from \"./walk-through-filler-nodes.js\";\nimport {isBuiltInModule} from \"../built-in/built-in-module-map.js\";\nimport type {TS} from \"../../type/ts.js\";\nimport {transformModuleSpecifier} from \"./transform-module-specifier.js\";\n\nexport interface IsRequireCallNoMatchResult {\n\tmatch: false;\n}\n\nexport interface IsRequireCallMatchResultWithNoResolvedModuleSpecifier {\n\tmatch: true;\n\tmoduleSpecifier: string | undefined;\n\ttransformedModuleSpecifier: string | undefined;\n\tresolvedModuleSpecifier: undefined;\n\tresolvedModuleSpecifierText: undefined;\n}\n\nexport interface IsRequireCallMatchResultWithResolvedModuleSpecifier {\n\tmatch: true;\n\tmoduleSpecifier: string;\n\tresolvedModuleSpecifier: string;\n\tresolvedModuleSpecifierText: string;\n\ttransformedModuleSpecifier: string;\n}\n\nexport type IsRequireCallResult = IsRequireCallNoMatchResult | IsRequireCallMatchResultWithNoResolvedModuleSpecifier | IsRequireCallMatchResultWithResolvedModuleSpecifier;\n\n/**\n * Checks if the CallExpression represents a require call (e.g.: 'require(...)')\n */\nexport function isRequireCall(inputExpression: TS.Expression, sourceFile: TS.SourceFile, context: VisitorContext): IsRequireCallResult {\n\tconst {typescript} = context;\n\tconst callExpression = walkThroughFillerNodes(inputExpression, typescript);\n\tif (!typescript.isCallExpression(callExpression)) return {match: false};\n\n\tconst expression = walkThroughFillerNodes(callExpression.expression, typescript);\n\tif (!typescript.isIdentifier(expression) || expression.text !== \"require\") return {match: false};\n\n\t// Take the first argument, if there is any\n\tconst [firstArgument] = callExpression.arguments;\n\tif (firstArgument == null) return {match: false};\n\n\tconst moduleSpecifier = typescript.isStringLiteralLike(firstArgument) ? firstArgument.text : undefined;\n\n\tconst resolvedModuleSpecifier =\n\t\tmoduleSpecifier == null\n\t\t\t? undefined\n\t\t\t: resolvePath({\n\t\t\t\t\t...context,\n\t\t\t\t\tid: moduleSpecifier,\n\t\t\t\t\tparent: sourceFile.fileName\n\t\t\t\t});\n\n\tconst resolvedModuleSpecifierText =\n\t\tresolvedModuleSpecifier == null || isBuiltInModule(resolvedModuleSpecifier) ? undefined : context.fileSystem.safeReadFileSync(resolvedModuleSpecifier)?.toString();\n\n\tif (moduleSpecifier == null || resolvedModuleSpecifier == null || resolvedModuleSpecifierText == null) {\n\t\treturn {\n\t\t\tmatch: true,\n\t\t\tmoduleSpecifier,\n\t\t\ttransformedModuleSpecifier: moduleSpecifier,\n\t\t\tresolvedModuleSpecifier: undefined,\n\t\t\tresolvedModuleSpecifierText: undefined\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tmatch: true,\n\t\t\ttransformedModuleSpecifier: transformModuleSpecifier(moduleSpecifier, {resolvedModuleSpecifier, context, parent: sourceFile.fileName}),\n\t\t\tmoduleSpecifier,\n\t\t\tresolvedModuleSpecifier,\n\t\t\tresolvedModuleSpecifierText\n\t\t};\n\t}\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\n/* eslint-disable @typescript-eslint/unified-signatures */\nimport type {TS} from \"../../type/ts.js\";\n\nexport function findNodeUp<T extends TS.Node>(from: TS.Node, nodeCb: (node: TS.Node) => node is T, breakWhen?: (node: TS.Node) => boolean): T | undefined;\nexport function findNodeUp<T extends TS.Node>(from: TS.Node, nodeCb: (node: TS.Node) => boolean, breakWhen?: (node: TS.Node) => boolean): T | undefined;\nexport function findNodeUp<T extends TS.Node>(from: TS.Node, nodeCb: (node: TS.Node) => boolean, breakWhen?: (node: TS.Node) => boolean): T | undefined {\n\tlet current = from as TS.Node | T;\n\twhile (current.parent != null) {\n\t\tcurrent = current.parent;\n\t\tif (breakWhen?.(current)) return undefined;\n\t\tif (nodeCb(current)) return current as T;\n\t}\n\treturn undefined;\n}\n","import type {TS} from \"../../type/ts.js\";\n\n/**\n * Returns true if the given Node is a Statement\n * Uses an internal non-exposed Typescript helper to decide whether or not the Node is an Expression\n */\nexport function isStatement(node: TS.Node, typescript: typeof TS): node is TS.Statement {\n\treturn (typescript as unknown as {isStatementButNotDeclaration(node: TS.Node): boolean}).isStatementButNotDeclaration(node);\n}\n","import type {TS} from \"../../type/ts.js\";\n\n/**\n * Returns true if the given Node is a Declaration\n * Uses an internal non-exposed Typescript helper to decide whether or not the Node is an Expression\n */\nexport function isDeclaration(node: TS.Node, typescript: typeof TS): node is TS.Declaration {\n\treturn (typescript as unknown as {isDeclaration(node: TS.Node): boolean}).isDeclaration(node);\n}\n","import {isStatement} from \"./is-statement.js\";\nimport {isDeclaration} from \"./is-declaration.js\";\nimport type {TS} from \"../../type/ts.js\";\n\n/**\n * Returns true if the given Node is a Statement is a Declaration\n */\nexport function isStatementOrDeclaration(node: TS.Node, typescript: typeof TS): node is TS.Statement | TS.Declaration {\n\treturn isStatement(node, typescript) || isDeclaration(node, typescript);\n}\n","import {camelCase} from \"@wessberg/stringutil\";\nimport path from \"crosspath\";\n\n/**\n * Generates a proper name based on the given module specifier\n */\nexport function generateNameFromModuleSpecifier(moduleSpecifier: string): string {\n\tconst {name} = path.parse(moduleSpecifier);\n\treturn camelCase(name);\n}\n","import type {IsRequireCallResult} from \"./is-require-call.js\";\nimport type {ModuleExports} from \"../module-exports/module-exports.js\";\nimport {BUILT_IN_MODULE_MAP, isBuiltInModule} from \"../built-in/built-in-module-map.js\";\nimport type {BeforeVisitorContext} from \"../visitor/before-visitor-context.js\";\nimport {isJsonModule} from \"./path-util.js\";\n\n/**\n * Tries to get or potentially parse module exports based on the given data in the given context\n */\nexport function getModuleExportsFromRequireDataInContext(data: IsRequireCallResult, context: BeforeVisitorContext): ModuleExports | undefined {\n\tif (!data.match) return undefined;\n\n\tconst {typescript} = context;\n\n\t// Otherwise, spread out the things we know about the require call\n\tconst {moduleSpecifier, resolvedModuleSpecifierText, resolvedModuleSpecifier} = data;\n\n\t// If no module specifier could be determined, remove the CallExpression from the SourceFile\n\tif (moduleSpecifier == null) {\n\t\treturn undefined;\n\t}\n\n\t// If we've been able to resolve a module as well as its contents,\n\t// Check it for exports so that we know more about its internals, for example whether or not it has any named exports, etc\n\tlet moduleExports: ModuleExports | undefined;\n\n\t// If no module specifier could be resolved, it may be a built in module - an we may know about its module exports already\n\tif (resolvedModuleSpecifier == null && isBuiltInModule(moduleSpecifier)) {\n\t\tmoduleExports = BUILT_IN_MODULE_MAP[moduleSpecifier];\n\t}\n\n\t// Otherwise, if we could resolve a module, try to get the exports for it\n\telse if (resolvedModuleSpecifier != null) {\n\t\t// Treat JSON modules as ones with a single default export\n\t\tif (isJsonModule(resolvedModuleSpecifier)) {\n\t\t\tmoduleExports = {\n\t\t\t\twithValue: \"json\",\n\t\t\t\thasDefaultExport: true,\n\t\t\t\tnamedExports: new Set()\n\t\t\t};\n\t\t} else {\n\t\t\t// Try to get the ModuleExports for the resolved module, if we know them already\n\t\t\tmoduleExports = context.getModuleExportsForPath(resolvedModuleSpecifier);\n\n\t\t\t// If that wasn't possible, generate a new SourceFile and parse it\n\t\t\tif (moduleExports == null) {\n\t\t\t\tmoduleExports = context.transformSourceFile(\n\t\t\t\t\ttypescript.createSourceFile(resolvedModuleSpecifier, resolvedModuleSpecifierText, typescript.ScriptTarget.ESNext, true, typescript.ScriptKind.TS),\n\t\t\t\t\t{\n\t\t\t\t\t\t...context,\n\t\t\t\t\t\tonlyExports: true\n\t\t\t\t\t}\n\t\t\t\t).exports;\n\t\t\t}\n\t\t}\n\t}\n\treturn moduleExports;\n}\n","import type {TS} from \"../../type/ts.js\";\nimport type {TaskOptions} from \"../../shared/task/task-options.js\";\n\nexport function shouldDebug(debug: TaskOptions[\"debug\"] | undefined, sourceFile?: TS.SourceFile): boolean {\n\tif (debug == null) return false;\n\tif (typeof debug === \"boolean\") return debug;\n\tif (sourceFile == null) return true;\n\tif (typeof debug === \"string\") return sourceFile.fileName === debug;\n\telse return debug(sourceFile.fileName);\n}\n","import type {TS} from \"../../type/ts.js\";\nimport type {VisitorContext} from \"../visitor-context.js\";\n\nexport function maybeGenerateImportAttributes(context: VisitorContext, moduleSpecifier: string, withValue?: string): TS.ImportAttributes | undefined {\n\tif (withValue == null) return undefined;\n\n\tconst {factory, importAttributes} = context;\n\n\tif (importAttributes === false || (typeof importAttributes === \"function\" && !importAttributes(moduleSpecifier))) {\n\t\treturn undefined;\n\t}\n\n\t// Note: We purposefully check on typescript.factory instead of context.factory, because we\n\t// want to check if the original NodeFactory - not the compatfactory - supports Import Attributes\n\tif (!(\"createImportAttributes\" in context.typescript.factory)) {\n\t\tcontext.logger.warn(\n\t\t\t`The current version of TypeScript (v${context.typescript.version}) does not support Import Attributes. No Import Attributes will be added for the module with specifier '${moduleSpecifier}' in the transformed code. To remove this warning, either disable import attributes or update to TypeScript v5.3 or newer.`\n\t\t);\n\t}\n\n\treturn factory.createImportAttributes(factory.createNodeArray([factory.createImportAttribute(factory.createIdentifier(\"type\"), factory.createStringLiteral(withValue))]));\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport {isRequireCall} from \"../../util/is-require-call.js\";\nimport {findNodeUp} from \"../../util/find-node-up.js\";\nimport {isStatementOrDeclaration} from \"../../util/is-statement-or-declaration.js\";\nimport {isStatement} from \"../../util/is-statement.js\";\nimport {generateNameFromModuleSpecifier} from \"../../util/generate-name-from-module-specifier.js\";\nimport {getModuleExportsFromRequireDataInContext} from \"../../util/get-module-exports-from-require-data-in-context.js\";\nimport type {TS} from \"../../../type/ts.js\";\nimport {shouldDebug} from \"../../util/should-debug.js\";\nimport {walkThroughFillerNodes} from \"../../util/walk-through-filler-nodes.js\";\nimport {maybeGenerateImportAttributes} from \"../../util/maybe-generate-import-attributes.js\";\n\n/**\n * Visits the given CallExpression\n */\nexport function visitCallExpression({node, childContinuation, sourceFile, context}: BeforeVisitorOptions<TS.CallExpression>): TS.VisitResult<TS.Node | undefined> {\n\tif (context.onlyExports) {\n\t\treturn childContinuation(node);\n\t}\n\n\t// Check if the node represents a require(...) call.\n\tconst requireData = isRequireCall(node, sourceFile, context);\n\tconst {typescript, factory} = context;\n\n\t// If it doesn't proceed without applying any transformations\n\tif (!requireData.match) {\n\t\treturn childContinuation(node);\n\t}\n\n\t// Otherwise, spread out the things we know about the require call\n\tconst {moduleSpecifier, transformedModuleSpecifier} = requireData;\n\n\t// If no module specifier could be determined, remove the CallExpression from the SourceFile\n\tif (moduleSpecifier == null || transformedModuleSpecifier == null) {\n\t\treturn undefined;\n\t}\n\n\t// If we've been able to resolve a module as well as its contents,\n\t// Check it for exports so that we know more about its internals, for example whether or not it has any named exports, etc\n\tconst moduleExports = getModuleExportsFromRequireDataInContext(requireData, context);\n\n\t// Find the first ExpressionStatement going up from the Node, breaking if part of a BinaryExpression, CallExpression, or a NewExpression\n\tconst expressionStatementParent = findNodeUp(\n\t\tnode,\n\t\ttypescript.isExpressionStatement,\n\t\tcurrentNode => typescript.isBinaryExpression(currentNode) || typescript.isCallExpression(currentNode) || typescript.isNewExpression(currentNode)\n\t);\n\n\t// If we don't know anything about the exports of the module, or if it doesn't export any named exports,\n\t// there's really not much we can do in terms of using the context of the CallExpression to import the maximally\n\t// minimal subset of the module. In these cases, the only thing that can be done is to import the default\n\t// export and maybe return an identifier for it depending on whether or not the CallExpression is part of an ExpressionStatement\n\tif (moduleExports == null || moduleExports.namedExports.size === 0 || (expressionStatementParent != null && !moduleExports.hasDefaultExport)) {\n\t\t// If part of an ExpressionStatement, simply return the module without any name or other bindings\n\t\tif (expressionStatementParent != null) {\n\t\t\t// Only add the import if there isn't already an import within the SourceFile of the entire module without any bindings\n\t\t\tif (!context.isModuleSpecifierImportedWithoutLocals(moduleSpecifier)) {\n\t\t\t\tcontext.addImport(\n\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports?.withValue)\n\t\t\t\t\t),\n\t\t\t\t\tmoduleSpecifier\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Drop this CallExpression\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Otherwise, we need to give the module a name and replace the CallExpression with an identifier for it\n\t\telse {\n\t\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t\t// rather than generating a new unnecessary import\n\t\t\tif (context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\t\tconst local = context.getLocalForDefaultImportFromModule(moduleSpecifier)!;\n\t\t\t\treturn factory.createIdentifier(local);\n\t\t\t} else {\n\t\t\t\tconst identifier = factory.createIdentifier(context.getFreeIdentifier(generateNameFromModuleSpecifier(moduleSpecifier)));\n\n\t\t\t\tconst importClause = factory.createImportClause(false, identifier, undefined);\n\n\t\t\t\tcontext.addImport(\n\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\timportClause,\n\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports?.withValue)\n\t\t\t\t\t),\n\t\t\t\t\tmoduleSpecifier\n\t\t\t\t);\n\n\t\t\t\t// Replace the CallExpression by the identifier\n\t\t\t\treturn identifier;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Otherwise, we know that we want to add an import instead of the CallExpression, but depending on the context of the CallExpression, we may\n\t// or may not import specific Named Exports, the Default Export, or the entire namespace.\n\n\t// Find the first Element- or PropertyAccessExpression that wraps the require(...) call, whatever it is.\n\t// That means that if it is wrapped in 'require(...)[\"foo\"].bar', then the ElementAccessExpression will be matched first\n\tconst elementOrPropertyAccessExpressionParent = findNodeUp<TS.PropertyAccessExpression | TS.ElementAccessExpression>(\n\t\tnode,\n\t\tchild => typescript.isElementAccessExpression(child) || typescript.isPropertyAccessExpression(child),\n\t\tnextNode => isStatementOrDeclaration(nextNode, typescript)\n\t);\n\n\tif (elementOrPropertyAccessExpressionParent != null) {\n\t\t// Try to evaluate the name or argument expression, depending on the kind of node\n\t\tlet rightValue: string | undefined;\n\n\t\t// If it is a PropertyAccessExpression, the name will always be an identifier\n\t\tif (typescript.isPropertyAccessExpression(elementOrPropertyAccessExpressionParent)) {\n\t\t\trightValue = elementOrPropertyAccessExpressionParent.name.text;\n\t\t} else {\n\t\t\t// Otherwise, the argument may be any kind of expression. Try to evaluate it to a string literal if possible\n\t\t\tif (typescript.isStringLiteralLike(elementOrPropertyAccessExpressionParent.argumentExpression)) {\n\t\t\t\trightValue = elementOrPropertyAccessExpressionParent.argumentExpression.text;\n\t\t\t}\n\t\t}\n\n\t\t// The argumentExpression or name matched a string, use that as a candidate for a lookup binding\n\t\tif (rightValue != null) {\n\t\t\t// If the module doesn't include a named export with a name matching the right value,\n\t\t\t// we should instead import the default export if it has any (otherwise we'll use a Namespace import) and replace the CallExpression with an identifier for it\n\t\t\tif (!moduleExports.namedExports.has(rightValue)) {\n\t\t\t\tlet identifier: TS.Identifier;\n\n\t\t\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t\t\t// rather than generating a new unnecessary import\n\t\t\t\tif (moduleExports.hasDefaultExport && context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\t\t\tidentifier = factory.createIdentifier(context.getLocalForDefaultImportFromModule(moduleSpecifier)!);\n\t\t\t\t}\n\n\t\t\t\t// If the namespace is already imported, get the local binding name for it and create an identifier for it\n\t\t\t\t// rather than generating a new unnecessary import\n\t\t\t\telse if (!moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\t\t\tidentifier = factory.createIdentifier(context.getLocalForNamespaceImportFromModule(moduleSpecifier)!);\n\t\t\t\t} else {\n\t\t\t\t\tidentifier = factory.createIdentifier(context.getFreeIdentifier(generateNameFromModuleSpecifier(moduleSpecifier)));\n\n\t\t\t\t\tcontext.addImport(\n\t\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\t\tundefined,\n\n\t\t\t\t\t\t\tmoduleExports.hasDefaultExport\n\t\t\t\t\t\t\t\t? // Import the default if it has any (or if we don't know if it has)\n\t\t\t\t\t\t\t\t\tfactory.createImportClause(false, identifier, undefined)\n\t\t\t\t\t\t\t\t: // Otherwise, import the entire namespace\n\t\t\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(identifier)),\n\t\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmoduleSpecifier\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Replace the CallExpression by an ObjectLiteral that can be accessed by the wrapping Element- or PropertyAccessExpression\n\t\t\t\tconst objectLiteralProperties = [\n\t\t\t\t\tidentifier.text !== rightValue\n\t\t\t\t\t\t? factory.createPropertyAssignment(rightValue, factory.createIdentifier(identifier.text))\n\t\t\t\t\t\t: factory.createShorthandPropertyAssignment(factory.createIdentifier(identifier.text))\n\t\t\t\t];\n\t\t\t\treturn factory.createObjectLiteralExpression(objectLiteralProperties);\n\t\t\t}\n\n\t\t\t// Otherwise, use the right value as the ImportSpecifier for a new import.\n\t\t\t// Depending on the placement of the CallExpression, we may or may not need to\n\t\t\t// replace it with an identifier or remove it entirely in favor of the ImportDeclaration\n\t\t\telse {\n\t\t\t\t// The property to import will be equal to the right value\n\t\t\t\tconst importBindingPropertyName = rightValue;\n\n\t\t\t\tlet importBindingName: string;\n\n\t\t\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t\t\t// rather than generating a new unnecessary import\n\t\t\t\tif (context.hasLocalForNamedImportPropertyNameFromModule(importBindingPropertyName, moduleSpecifier)) {\n\t\t\t\t\timportBindingName = context.getLocalForNamedImportPropertyNameFromModule(importBindingPropertyName, moduleSpecifier)!;\n\t\t\t\t}\n\n\t\t\t\t// If the namespace is already imported, get the local binding name for it and create an identifier for it\n\t\t\t\t// rather than generating a new unnecessary import\n\t\t\t\telse if (!moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\t\t\timportBindingName = context.getLocalForNamespaceImportFromModule(moduleSpecifier)!;\n\t\t\t\t} else {\n\t\t\t\t\t// If that binding isn't free within the context, import it as another local name\n\t\t\t\t\timportBindingName = context.getFreeIdentifier(importBindingPropertyName);\n\n\t\t\t\t\tconst namedImports = factory.createNamedImports([\n\t\t\t\t\t\timportBindingPropertyName === importBindingName\n\t\t\t\t\t\t\t? // If the property name is free within the context, don't alias the import\n\t\t\t\t\t\t\t\tfactory.createImportSpecifier(false, undefined, factory.createIdentifier(importBindingPropertyName))\n\t\t\t\t\t\t\t: // Otherwise, import it aliased by another name that is free within the context\n\t\t\t\t\t\t\t\tfactory.createImportSpecifier(false, factory.createIdentifier(importBindingPropertyName), factory.createIdentifier(importBindingName))\n\t\t\t\t\t]);\n\n\t\t\t\t\tconst importClause = factory.createImportClause(false, undefined, namedImports);\n\n\t\t\t\t\tcontext.addImport(\n\t\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\timportClause,\n\t\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmoduleSpecifier\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If the 'require(...)[<something>]' or 'require(...).<something>' expression is part of an ExpressionStatement\n\t\t\t\t// and isn't part of another expression such as a BinaryExpression, only preserve the import.\n\t\t\t\t// Otherwise leave an ObjectLiteral that can be accessed by the wrapping Element- or PropertyAccessExpression\n\t\t\t\tif (expressionStatementParent == null) {\n\t\t\t\t\tconst objectLiteralProperties = [\n\t\t\t\t\t\timportBindingName !== rightValue\n\t\t\t\t\t\t\t? factory.createPropertyAssignment(rightValue, factory.createIdentifier(importBindingName))\n\t\t\t\t\t\t\t: factory.createShorthandPropertyAssignment(factory.createIdentifier(importBindingName))\n\t\t\t\t\t];\n\t\t\t\t\treturn factory.createObjectLiteralExpression(objectLiteralProperties);\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// If no lookup binding candidate has been determined, it may be determined based on the parent VariableDeclaration,\n\t// if there is any.\n\n\t// Find the first VariableDeclaration that holds the require(...) call, if any.\n\t// For example, 'const foo = require(...)' would match the VariableDeclaration for 'foo'\n\tconst variableDeclarationParent = findNodeUp(node, typescript.isVariableDeclaration, nextNode => isStatement(nextNode, typescript));\n\n\tif (variableDeclarationParent != null) {\n\t\t// If the VariableDeclaration is simply bound to a name, it doesn't tell us anything interesting.\n\t\t// Simply add an import for the default export - if it has any (otherwise we'll import the entire namespace), and\n\t\t// replace this CallExpression by an identifier for it\n\t\tif (typescript.isIdentifier(variableDeclarationParent.name)) {\n\t\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t\t// rather than generating a new unnecessary import\n\t\t\tif (moduleExports.hasDefaultExport && context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\t\tconst local = context.getLocalForDefaultImportFromModule(moduleSpecifier)!;\n\t\t\t\treturn factory.createIdentifier(local);\n\t\t\t}\n\n\t\t\t// If the namespace is already imported, get the local binding name for it and create an identifier for it\n\t\t\t// rather than generating a new unnecessary import\n\t\t\telse if (!moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\t\tconst local = context.getLocalForNamespaceImportFromModule(moduleSpecifier)!;\n\t\t\t\treturn factory.createIdentifier(local);\n\t\t\t}\n\n\t\t\t// Otherwise proceed as planned\n\t\t\telse {\n\t\t\t\tconst identifier = factory.createIdentifier(context.getFreeIdentifier(generateNameFromModuleSpecifier(moduleSpecifier)));\n\t\t\t\tcontext.addImport(\n\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\n\t\t\t\t\t\tmoduleExports.hasDefaultExport\n\t\t\t\t\t\t\t? // Import the default if it has any (or if we don't know if it has)\n\t\t\t\t\t\t\t\tfactory.createImportClause(false, identifier, undefined)\n\t\t\t\t\t\t\t: // Otherwise, import the entire namespace\n\t\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(identifier)),\n\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t),\n\t\t\t\t\tmoduleSpecifier\n\t\t\t\t);\n\t\t\t\treturn identifier;\n\t\t\t}\n\t\t}\n\n\t\t// If the VariableDeclaration is a BindingPattern, it may mimic destructuring specific named exports.\n\t\t// For example, 'const {foo, bar} = require(\"./bar\")' could import the named export bindings 'foo' and 'bar' from the module './bar'.\n\t\t// However, if as much as a single one of these elements don't directly match a named export, opt out of this behavior and instead\n\t\t// import the default export (if it has any, otherwise import the entire namespace).\n\t\telse if (typescript.isObjectBindingPattern(variableDeclarationParent.name)) {\n\t\t\tconst importSpecifiers: TS.ImportSpecifier[] = [];\n\t\t\tconst skippedImportSpecifiers: TS.ImportSpecifier[] = [];\n\n\t\t\t// Check each of the BindingElements\n\t\t\tfor (const element of variableDeclarationParent.name.elements) {\n\t\t\t\t// If the property name isn't given, the name will always be an Identifier\n\t\t\t\tif (element.propertyName == null && typescript.isIdentifier(element.name)) {\n\t\t\t\t\t// If the module exports contains a named export matching the identifier name,\n\t\t\t\t\t// use that as an ImportSpecifier\n\t\t\t\t\tif (moduleExports.namedExports.has(element.name.text)) {\n\t\t\t\t\t\t// If the property has already been imported, don't add an import, but instead push to 'skippedImportSpecifiers'.\n\t\t\t\t\t\tif (context.hasLocalForNamedImportPropertyNameFromModule(element.name.text, moduleSpecifier)) {\n\t\t\t\t\t\t\tconst local = context.getLocalForNamedImportPropertyNameFromModule(element.name.text, moduleSpecifier)!;\n\t\t\t\t\t\t\tskippedImportSpecifiers.push(\n\t\t\t\t\t\t\t\tlocal === element.name.text\n\t\t\t\t\t\t\t\t\t? factory.createImportSpecifier(false, undefined, factory.createIdentifier(local))\n\t\t\t\t\t\t\t\t\t: factory.createImportSpecifier(false, factory.createIdentifier(element.name.text), factory.createIdentifier(local))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the name is free, just import it as it is\n\t\t\t\t\t\telse if (context.isIdentifierFree(element.name.text)) {\n\t\t\t\t\t\t\tcontext.addLocal(element.name.text);\n\t\t\t\t\t\t\timportSpecifiers.push(factory.createImportSpecifier(false, undefined, factory.createIdentifier(element.name.text)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Otherwise, import it under an aliased name\n\t\t\t\t\t\t\tconst alias = context.getFreeIdentifier(element.name.text);\n\t\t\t\t\t\t\timportSpecifiers.push(factory.createImportSpecifier(false, factory.createIdentifier(element.name.text), factory.createIdentifier(alias)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, if it has a PropertyName,\n\t\t\t\t// It may be something like for example: '{foo: bar}' where 'foo' is the PropertyName and 'bar' is the name.\n\t\t\t\t// Of course it can get wilder than that, but for it to mimic ESM, we'll use at most the '{<propertyName>: <name>}' form\n\t\t\t\t// and preserve the remaining BindingName.\n\t\t\t\t// Since the ':bar' assignment comes from the VariableDeclaration that surrounds this CallExpression, we'll only\n\t\t\t\t// need to import the actual named export without considering the alias\n\t\t\t\telse if (element.propertyName != null && typescript.isIdentifier(element.propertyName)) {\n\t\t\t\t\t// If the name is free, just import it as it is\n\t\t\t\t\tif (context.isIdentifierFree(element.propertyName.text)) {\n\t\t\t\t\t\tcontext.addLocal(element.propertyName.text);\n\t\t\t\t\t\timportSpecifiers.push(factory.createImportSpecifier(false, undefined, factory.createIdentifier(element.propertyName.text)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst alias = context.getFreeIdentifier(element.propertyName.text);\n\t\t\t\t\t\timportSpecifiers.push(factory.createImportSpecifier(false, factory.createIdentifier(element.propertyName.text), factory.createIdentifier(alias)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there aren't as many ImportSpecifiers as there are elements, opt out of this behavior and instead\n\t\t\t// import the default export (if it has any, otherwise import the entire namespace).\n\t\t\tif (importSpecifiers.length + skippedImportSpecifiers.length !== variableDeclarationParent.name.elements.length) {\n\t\t\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t\t\t// rather than generating a new unnecessary import\n\t\t\t\tif (moduleExports.hasDefaultExport && context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\t\t\tconst local = context.getLocalForDefaultImportFromModule(moduleSpecifier)!;\n\t\t\t\t\treturn factory.createIdentifier(local);\n\t\t\t\t}\n\n\t\t\t\t// If the namespace is already imported, get the local binding name for it and create an identifier for it\n\t\t\t\t// rather than generating a new unnecessary import\n\t\t\t\telse if (!moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\t\t\tconst local = context.getLocalForNamespaceImportFromModule(moduleSpecifier)!;\n\t\t\t\t\treturn factory.createIdentifier(local);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise proceed as planned\n\t\t\t\telse {\n\t\t\t\t\tconst identifier = factory.createIdentifier(context.getFreeIdentifier(generateNameFromModuleSpecifier(moduleSpecifier)));\n\t\t\t\t\tcontext.addImport(\n\t\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\t\tundefined,\n\n\t\t\t\t\t\t\tmoduleExports.hasDefaultExport\n\t\t\t\t\t\t\t\t? // Import the default if it has any (or if we don't know if it has)\n\t\t\t\t\t\t\t\t\tfactory.createImportClause(false, identifier, undefined)\n\t\t\t\t\t\t\t\t: // Otherwise, import the entire namespace\n\t\t\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(identifier)),\n\t\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmoduleSpecifier\n\t\t\t\t\t);\n\t\t\t\t\treturn identifier;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise, add an import for those specific, optionally aliased, named exports\n\t\t\t// and then replace this CallExpression with an Object literal that can be destructured\n\t\t\telse {\n\t\t\t\tif (importSpecifiers.length > 0) {\n\t\t\t\t\tcontext.addImport(\n\t\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamedImports(importSpecifiers)),\n\t\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmoduleSpecifier\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst objectLiteralProperties = [...importSpecifiers, ...skippedImportSpecifiers].map(specifier =>\n\t\t\t\t\tspecifier.propertyName != null\n\t\t\t\t\t\t? factory.createPropertyAssignment(specifier.propertyName.text, factory.createIdentifier(specifier.name.text))\n\t\t\t\t\t\t: factory.createShorthandPropertyAssignment(factory.createIdentifier(specifier.name.text))\n\t\t\t\t);\n\t\t\t\treturn factory.createObjectLiteralExpression(objectLiteralProperties);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Find the first BinaryExpression with an equals token that holds the require(...) call on the right side, and a PropertyAccessExpression or ElementAccessExpression on the left side, if any.\n\t// For example, 'exports.foo = require(...)'\n\tconst binaryExpressionParent = findNodeUp(node, typescript.isBinaryExpression, nextNode => isStatement(nextNode, typescript));\n\n\tif (\n\t\tbinaryExpressionParent != null &&\n\t\tbinaryExpressionParent.operatorToken.kind === typescript.SyntaxKind.EqualsToken &&\n\t\t(typescript.isPropertyAccessExpression(walkThroughFillerNodes(binaryExpressionParent.left, typescript)) ||\n\t\t\ttypescript.isElementAccessExpression(walkThroughFillerNodes(binaryExpressionParent.left, typescript)))\n\t) {\n\t\t// Simply add an import for the default export - if it has any (otherwise we'll import the entire namespace), and\n\t\t// replace this CallExpression by an identifier for it\n\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t// rather than generating a new unnecessary import\n\t\tif (moduleExports.hasDefaultExport && context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\tconst local = context.getLocalForDefaultImportFromModule(moduleSpecifier)!;\n\t\t\treturn factory.createIdentifier(local);\n\t\t}\n\n\t\t// If the namespace is already imported, get the local binding name for it and create an identifier for it\n\t\t// rather than generating a new unnecessary import\n\t\telse if (!moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\tconst local = context.getLocalForNamespaceImportFromModule(moduleSpecifier)!;\n\t\t\treturn factory.createIdentifier(local);\n\t\t}\n\n\t\t// Otherwise proceed as planned\n\t\telse {\n\t\t\tconst identifier = factory.createIdentifier(context.getFreeIdentifier(generateNameFromModuleSpecifier(moduleSpecifier)));\n\t\t\tcontext.addImport(\n\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\tundefined,\n\n\t\t\t\t\tmoduleExports.hasDefaultExport\n\t\t\t\t\t\t? // Import the default if it has any (or if we don't know if it has)\n\t\t\t\t\t\t\tfactory.createImportClause(false, identifier, undefined)\n\t\t\t\t\t\t: // Otherwise, import the entire namespace\n\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(identifier)),\n\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t),\n\t\t\t\tmoduleSpecifier\n\t\t\t);\n\t\t\treturn identifier;\n\t\t}\n\t}\n\n\t// Otherwise, check if the require(...) call is part of another CallExpression.\n\t// For example: 'myFunction(require(...)' or 'require(...)(...)'\n\tconst callExpressionParent = findNodeUp(node, typescript.isCallExpression, nextNode => isStatementOrDeclaration(nextNode, typescript));\n\n\t// If it is wrapped in a CallExpression, import the default export if it has any (otherwise the entire namespace)\n\t// and replace the require() call by an identifier for it\n\tif (callExpressionParent != null) {\n\t\t// If the default export is already imported, get the local binding name for it and create an identifier for it\n\t\t// rather than generating a new unnecessary import\n\t\tif (moduleExports.hasDefaultExport && context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\tconst local = context.getLocalForDefaultImportFromModule(moduleSpecifier)!;\n\t\t\treturn factory.createIdentifier(local);\n\t\t}\n\n\t\t// If the namespace is already imported, get the local binding name for it and create an identifier for it\n\t\t// rather than generating a new unnecessary import\n\t\telse if (!moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\tconst local = context.getLocalForNamespaceImportFromModule(moduleSpecifier)!;\n\t\t\treturn factory.createIdentifier(local);\n\t\t}\n\n\t\t// Otherwise, proceed as planned\n\t\telse {\n\t\t\tconst identifier = factory.createIdentifier(context.getFreeIdentifier(generateNameFromModuleSpecifier(moduleSpecifier)));\n\t\t\tcontext.addImport(\n\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\tundefined,\n\n\t\t\t\t\tmoduleExports.hasDefaultExport\n\t\t\t\t\t\t? // Import the default if it has any (or if we don't know if it has)\n\t\t\t\t\t\t\tfactory.createImportClause(false, identifier, undefined)\n\t\t\t\t\t\t: // Otherwise, import the entire namespace\n\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(identifier)),\n\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t),\n\t\t\t\tmoduleSpecifier\n\t\t\t);\n\t\t\treturn identifier;\n\t\t}\n\t}\n\n\tif (shouldDebug(context.debug)) {\n\t\tthrow new TypeError(`Could not handle require() call`);\n\t} else {\n\t\treturn node;\n\t}\n}\n","import {walkThroughFillerNodes} from \"./walk-through-filler-nodes.js\";\nimport type {TS} from \"../../type/ts.js\";\n\nexport interface ExportsData {\n\tproperty: string;\n}\n\nexport function getExportsData(expression: TS.Expression, exportsName = \"exports\", typescript: typeof TS): Partial<ExportsData> | undefined {\n\texpression = walkThroughFillerNodes(expression, typescript);\n\n\tif (typescript.isIdentifier(expression)) {\n\t\tif (expression.text === exportsName) {\n\t\t\treturn {};\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t} else if (typescript.isPropertyAccessExpression(expression)) {\n\t\tconst left = walkThroughFillerNodes(expression.expression, typescript);\n\t\tconst right = expression.name;\n\n\t\t// If the left-hand side is an identifier, it may be something like 'module.exports',\n\t\t// but it may also be something completely unrelated such as 'foo.bar'\n\t\tif (typescript.isIdentifier(left)) {\n\t\t\tif (left.text === \"module\" && right.text === exportsName) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\t// This will be something like 'exports.foo'\n\t\t\telse if (left.text === exportsName) {\n\t\t\t\treturn {\n\t\t\t\t\tproperty: right.text\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// This will be something completely unrelated\n\t\t\telse {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise, check if the left-hand side leads to exports data\n\t\t\tconst leftData = getExportsData(left, exportsName, typescript);\n\t\t\tif (leftData == null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// If it does, this is something like 'module.exports.foo'\n\t\t\telse {\n\t\t\t\treturn {\n\t\t\t\t\t...leftData,\n\t\t\t\t\tproperty: right.text\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} else if (typescript.isElementAccessExpression(expression)) {\n\t\tconst left = walkThroughFillerNodes(expression.expression, typescript);\n\t\tconst right = walkThroughFillerNodes(expression.argumentExpression, typescript);\n\n\t\t// If the argument expression is something that isn't statically analyzable, skip it\n\t\tif (!typescript.isStringLiteralLike(right)) return undefined;\n\n\t\t// If the left-hand side is an identifier, it may be something like 'module.exports',\n\t\t// but it may also be something completely unrelated such as 'foo.bar'\n\t\tif (typescript.isIdentifier(left)) {\n\t\t\tif (left.text === \"module\" && right.text === exportsName) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\t// This will be something like 'exports.foo'\n\t\t\telse if (left.text === exportsName) {\n\t\t\t\treturn {\n\t\t\t\t\tproperty: right.text\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// This will be something completely unrelated\n\t\t\telse {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise, check if the left-hand side leads to exports data\n\t\t\tconst leftData = getExportsData(left, exportsName, typescript);\n\t\t\tif (leftData == null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// If it does, this is something like 'module.exports.foo'\n\t\t\telse {\n\t\t\t\treturn {\n\t\t\t\t\t...leftData,\n\t\t\t\t\tproperty: right.text\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n}\n","import type {TS} from \"../../type/ts.js\";\n\nexport function isNamedDeclaration(node: TS.Node | TS.NamedDeclaration, typescript: typeof TS): node is TS.NamedDeclaration {\n\tif (typescript.isPropertyAccessExpression(node)) return false;\n\treturn \"name\" in node && node.name != null;\n}\n","import type {BeforeVisitorContext} from \"../visitor/before-visitor-context.js\";\nimport type {TS} from \"../../type/ts.js\";\nimport {addExportModifier, canHaveModifiers, hasExportModifier} from \"../../shared/util/util.js\";\n\nexport function ensureNodeHasExportModifier<T extends TS.NamedDeclaration>(node: T, context: BeforeVisitorContext): T {\n\tconst {typescript, factory} = context;\n\n\tconst declarationName = typescript.getNameOfDeclaration(node);\n\tif (declarationName != null && typescript.isIdentifier(declarationName)) {\n\t\t// If the declaration name is part of the exports of the SourceFile, return the node as it is\n\t\tif (context.isLocalExported(declarationName.text)) {\n\t\t\treturn node;\n\t\t}\n\n\t\tcontext.markLocalAsExported(declarationName.text);\n\t}\n\n\t// If the node already has an Export modifier, or if it wouldn't support such a modifier anyway, there's nothing to do\n\tif (hasExportModifier(node, typescript) || !canHaveModifiers(node, typescript)) {\n\t\treturn node;\n\t}\n\n\tconst newModifiers = addExportModifier(node, typescript, factory);\n\n\treturn context.factory.replaceModifiers(\n\t\tnode,\n\t\tnewModifiers.filter(modifier => typescript.isModifier(modifier))\n\t);\n}\n","import type {TS} from \"../../type/ts.js\";\n\nexport function nodeContainsSuper<T extends TS.Node>(node: T, typescript: typeof TS): boolean {\n\tif (node.kind === typescript.SyntaxKind.ThisKeyword) return true;\n\treturn typescript.forEachChild<boolean>(node, nextNode => nodeContainsSuper(nextNode, typescript)) === true;\n}\n","import type {TS} from \"../../type/ts.js\";\n\n/**\n * Returns true if the given Node is an Expression.\n * Uses an internal non-exposed Typescript helper to decide whether or not the Node is an Expression\n */\nexport function isExpression(node: TS.Node, typescript: typeof TS): node is TS.Expression {\n\ttry {\n\t\treturn (typescript as unknown as {isExpressionNode(node: TS.Node): boolean}).isExpressionNode(node) || typescript.isIdentifier(node);\n\t} catch {\n\t\treturn false;\n\t}\n}\n","import type {TS} from \"../../type/ts.js\";\n\nexport function getLocalsForBindingName(name: TS.BindingName, typescript: typeof TS): string[] {\n\tif (typescript.isIdentifier(name)) {\n\t\treturn [name.text];\n\t} else if (typescript.isObjectBindingPattern(name)) {\n\t\tconst locals: string[] = [];\n\t\tfor (const element of name.elements) {\n\t\t\tlocals.push(...getLocalsForBindingName(element.name, typescript));\n\t\t}\n\t\treturn locals;\n\t} else {\n\t\tconst locals: string[] = [];\n\t\tfor (const element of name.elements) {\n\t\t\tif (typescript.isOmittedExpression(element)) continue;\n\t\t\tlocals.push(...getLocalsForBindingName(element.name, typescript));\n\t\t}\n\t\treturn locals;\n\t}\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport {getExportsData} from \"../../util/get-exports-data.js\";\nimport {walkThroughFillerNodes} from \"../../util/walk-through-filler-nodes.js\";\nimport {isNamedDeclaration} from \"../../util/is-named-declaration.js\";\nimport {ensureNodeHasExportModifier} from \"../../util/ensure-node-has-export-modifier.js\";\nimport {nodeContainsSuper} from \"../../util/node-contains-super.js\";\nimport {isRequireCall} from \"../../util/is-require-call.js\";\nimport {getModuleExportsFromRequireDataInContext} from \"../../util/get-module-exports-from-require-data-in-context.js\";\nimport {isExpression} from \"../../util/is-expression.js\";\nimport {findNodeUp} from \"../../util/find-node-up.js\";\nimport {getLocalsForBindingName} from \"../../util/get-locals-for-binding-name.js\";\nimport type {TS} from \"../../../type/ts.js\";\nimport {shouldDebug} from \"../../util/should-debug.js\";\nimport {addExportModifier, isArray} from \"../../../shared/util/util.js\";\n\n/**\n * Visits the given BinaryExpression\n */\nexport function visitBinaryExpression({node, sourceFile, context, continuation}: BeforeVisitorOptions<TS.BinaryExpression>): TS.VisitResult<TS.Node | undefined> {\n\t// Check if the left-hand side contains exports. For example: 'exports = ...' or 'exports.foo = 1' or event 'module.exports = 1'\n\tconst {typescript, factory} = context;\n\tconst exportsData = getExportsData(node.left, context.exportsName, typescript);\n\tconst right = walkThroughFillerNodes(node.right, typescript);\n\tif (exportsData == null) return node;\n\n\t// If it is an assignment\n\tif (node.operatorToken.kind === typescript.SyntaxKind.EqualsToken) {\n\t\t// Check if this expression is part of a VariableDeclaration.\n\t\t// For example: 'const foo = module.exports = ...'\n\t\tconst variableDeclarationParent = findNodeUp(node, typescript.isVariableDeclaration);\n\t\tconst [firstLocalForVariableDeclarationParent] = variableDeclarationParent == null ? [] : getLocalsForBindingName(variableDeclarationParent.name, typescript);\n\t\tconst variableDeclarationLocal = firstLocalForVariableDeclarationParent != null ? factory.createIdentifier(firstLocalForVariableDeclarationParent) : undefined;\n\n\t\t// This is something like for example 'exports = ...', 'module.exports = ...', 'exports.default', or 'module.exports.default'\n\t\tif (exportsData.property == null || exportsData.property === \"default\") {\n\t\t\t// Take all individual key-value pairs of that ObjectLiteral\n\t\t\t// and turn them into named exports if possible.\n\t\t\t// Also generate a default export of the entire exports object\n\t\t\tif (typescript.isObjectLiteralExpression(right)) {\n\t\t\t\t// If it has no properties, or if the literal is exported as part of the right-hand side of the assignment for a VariableDeclaration, create a simple default export declaration\n\t\t\t\tif (right.properties.length === 0 || variableDeclarationLocal != null) {\n\t\t\t\t\tconst continuationResult = continuation(node.right);\n\n\t\t\t\t\tif (continuationResult == null || isArray(continuationResult) || !isExpression(continuationResult, typescript)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst exportedSymbol = variableDeclarationLocal ?? continuationResult;\n\n\t\t\t\t\t// Only generate the default export if the module don't already include a default export\n\t\t\t\t\tif (!context.isDefaultExported) {\n\t\t\t\t\t\tcontext.markDefaultAsExported();\n\t\t\t\t\t\tcontext.addTrailingStatements(factory.createExportAssignment(undefined, false, exportedSymbol));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn variableDeclarationParent != null ? node.right : undefined;\n\t\t\t\t}\n\n\t\t\t\tconst statements: TS.Statement[] = [];\n\t\t\t\tlet moduleExportsIdentifierName: string | undefined;\n\t\t\t\tconst elements: TS.ObjectLiteralElementLike[] = [];\n\n\t\t\t\tfor (const property of right.properties) {\n\t\t\t\t\tconst propertyName =\n\t\t\t\t\t\tproperty.name == null\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: typescript.isLiteralExpression(property.name) || typescript.isIdentifier(property.name) || typescript.isPrivateIdentifier(property.name)\n\t\t\t\t\t\t\t\t? property.name.text\n\t\t\t\t\t\t\t\t: typescript.isLiteralExpression(property.name.expression)\n\t\t\t\t\t\t\t\t\t? property.name.expression.text\n\t\t\t\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\t// If no property name could be decided, or if the local is already exported, or if it is a setter, skip this property\n\t\t\t\t\tif (propertyName == null || typescript.isSetAccessorDeclaration(property) || typescript.isGetAccessorDeclaration(property) || context.isLocalExported(propertyName)) {\n\t\t\t\t\t\telements.push(property);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it is a Shorthand Property assignment, we know that it holds a reference to some root-level identifier.\n\t\t\t\t\t// Based on this knowledge, we can safely generate a proper ExportDeclaration for it\n\t\t\t\t\tif (typescript.isShorthandPropertyAssignment(property)) {\n\t\t\t\t\t\tcontext.markLocalAsExported(propertyName);\n\n\t\t\t\t\t\telements.push(factory.createShorthandPropertyAssignment(propertyName, property.objectAssignmentInitializer));\n\n\t\t\t\t\t\tconst namedExports = factory.createNamedExports([factory.createExportSpecifier(false, undefined, propertyName)]);\n\t\t\t\t\t\tstatements.push(factory.createExportDeclaration(undefined, false, namedExports, undefined));\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it is a PropertyAssignment that points to an Identifier, we know that it holds a reference to some root-level identifier.\n\t\t\t\t\t// Based on this knowledge, we can safely generate a proper ExportDeclaration for it\n\t\t\t\t\telse if (typescript.isPropertyAssignment(property) && typescript.isIdentifier(property.initializer)) {\n\t\t\t\t\t\tcontext.markLocalAsExported(propertyName);\n\n\t\t\t\t\t\telements.push(factory.createPropertyAssignment(propertyName, factory.createIdentifier(property.initializer.text)));\n\n\t\t\t\t\t\tconst namedExports = factory.createNamedExports([\n\t\t\t\t\t\t\tpropertyName === property.initializer.text\n\t\t\t\t\t\t\t\t? factory.createExportSpecifier(false, undefined, propertyName)\n\t\t\t\t\t\t\t\t: factory.createExportSpecifier(false, property.initializer.text, propertyName)\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tstatements.push(factory.createExportDeclaration(undefined, false, namedExports, undefined));\n\t\t\t\t\t} else if (context.isIdentifierFree(propertyName) && typescript.isPropertyAssignment(property) && !nodeContainsSuper(property.initializer, typescript)) {\n\t\t\t\t\t\tcontext.addLocal(propertyName);\n\t\t\t\t\t\telements.push(factory.createShorthandPropertyAssignment(propertyName));\n\n\t\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\t\t\t[factory.createModifier(typescript.SyntaxKind.ExportKeyword)],\n\t\t\t\t\t\t\t\tfactory.createVariableDeclarationList([factory.createVariableDeclaration(propertyName, undefined, undefined, property.initializer)], typescript.NodeFlags.Const)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it is a MethodDeclaration that can be safely rewritten to a function, do so\n\t\t\t\t\telse if (\n\t\t\t\t\t\tcontext.isIdentifierFree(propertyName) &&\n\t\t\t\t\t\ttypescript.isMethodDeclaration(property) &&\n\t\t\t\t\t\ttypescript.isIdentifier(property.name) &&\n\t\t\t\t\t\t!nodeContainsSuper(property, typescript)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontext.addLocal(propertyName);\n\t\t\t\t\t\telements.push(factory.createShorthandPropertyAssignment(propertyName));\n\n\t\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t\tfactory.createFunctionDeclaration(\n\t\t\t\t\t\t\t\taddExportModifier(property, typescript, factory),\n\t\t\t\t\t\t\t\tproperty.asteriskToken,\n\t\t\t\t\t\t\t\tproperty.name,\n\t\t\t\t\t\t\t\tproperty.typeParameters,\n\t\t\t\t\t\t\t\tproperty.parameters,\n\t\t\t\t\t\t\t\tproperty.type,\n\t\t\t\t\t\t\t\tproperty.body\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, so long as the identifier of the property is free, generate a VariableStatement that exports\n\t\t\t\t\t// the binding as a named export\n\t\t\t\t\telse if (context.isIdentifierFree(propertyName)) {\n\t\t\t\t\t\tcontext.addLocal(propertyName);\n\t\t\t\t\t\telements.push(property);\n\t\t\t\t\t\tif (moduleExportsIdentifierName == null) {\n\t\t\t\t\t\t\tmoduleExportsIdentifierName = context.getFreeIdentifier(\"moduleExports\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.markLocalAsExported(propertyName);\n\t\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\t\t\t[factory.createModifier(typescript.SyntaxKind.ExportKeyword)],\n\t\t\t\t\t\t\t\tfactory.createVariableDeclarationList(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tfactory.createVariableDeclaration(\n\t\t\t\t\t\t\t\t\t\t\tpropertyName,\n\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\tfactory.createPropertyAccessExpression(factory.createIdentifier(moduleExportsIdentifierName), propertyName)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\ttypescript.NodeFlags.Const\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telements.push(property);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we need the default export the have a name such that it can be referenced in a later named export,\n\t\t\t\t// create a VariableStatement as well as an ExportAssignment that references it\n\t\t\t\tif (moduleExportsIdentifierName != null) {\n\t\t\t\t\t// Create a VariableStatement that exports the ObjectLiteral\n\t\t\t\t\tstatements.push(\n\t\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfactory.createVariableDeclarationList(\n\t\t\t\t\t\t\t\t[factory.createVariableDeclaration(moduleExportsIdentifierName, undefined, undefined, factory.createObjectLiteralExpression(elements, true))],\n\t\t\t\t\t\t\t\ttypescript.NodeFlags.Const\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!context.isDefaultExported) {\n\t\t\t\t\t\tstatements.push(factory.createExportAssignment(undefined, false, factory.createIdentifier(moduleExportsIdentifierName)));\n\n\t\t\t\t\t\tcontext.markDefaultAsExported();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, we don't need to assign it to a VariableStatement. Instead, we can just provide the ObjectLiteralExpression to the ExportAssignment directly.\n\t\t\t\telse if (!context.isDefaultExported) {\n\t\t\t\t\tconst defaultExportInitializer = factory.createObjectLiteralExpression(elements, true);\n\t\t\t\t\tstatements.push(factory.createExportAssignment(undefined, false, defaultExportInitializer));\n\t\t\t\t}\n\n\t\t\t\t// Return all of the statements\n\t\t\t\tcontext.addTrailingStatements(...statements);\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Convert it into an ExportAssignment instead if possible\n\t\t\telse {\n\t\t\t\t// Check if the rightvalue represents a require(...) call.\n\t\t\t\tconst requireData = isRequireCall(node.right, sourceFile, context);\n\n\t\t\t\t// If it doesn't, export the right side\n\t\t\t\tif (!requireData.match) {\n\t\t\t\t\tif (!context.isDefaultExported) {\n\t\t\t\t\t\tcontext.markDefaultAsExported();\n\t\t\t\t\t\tconst continuationResult = continuation(node.right);\n\t\t\t\t\t\tif (continuationResult == null || isArray(continuationResult) || !isExpression(continuationResult, typescript)) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst replacementNode = variableDeclarationParent != null ? continuationResult : undefined;\n\t\t\t\t\t\t\tconst exportedSymbol = variableDeclarationLocal ?? continuationResult;\n\n\t\t\t\t\t\t\tcontext.addTrailingStatements(factory.createExportAssignment(undefined, false, exportedSymbol));\n\t\t\t\t\t\t\treturn replacementNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, spread out the things we know about the require call\n\t\t\t\tconst {transformedModuleSpecifier} = requireData;\n\n\t\t\t\t// If no module specifier could be determined, there's nothing we can do\n\t\t\t\tif (transformedModuleSpecifier == null) {\n\t\t\t\t\tif (shouldDebug(context.debug)) {\n\t\t\t\t\t\tthrow new TypeError(`Could not handle re-export from require() call. The module specifier wasn't statically analyzable`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, take the exports from that module\n\t\t\t\telse {\n\t\t\t\t\tconst moduleExports = getModuleExportsFromRequireDataInContext(requireData, context);\n\t\t\t\t\tconst moduleSpecifierExpression = factory.createStringLiteral(transformedModuleSpecifier);\n\n\t\t\t\t\t// If the module has a default export, or if we know nothing about it,\n\t\t\t\t\t// export the default export from that module\n\t\t\t\t\tif (!context.isDefaultExported && (moduleExports == null || moduleExports.hasDefaultExport)) {\n\t\t\t\t\t\tcontext.markDefaultAsExported();\n\t\t\t\t\t\tconst namedExports = factory.createNamedExports([factory.createExportSpecifier(false, undefined, \"default\")]);\n\n\t\t\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, namedExports, moduleSpecifierExpression));\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, export the entire module (e.g. all named exports)\n\t\t\t\t\telse {\n\t\t\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, undefined, moduleSpecifierExpression));\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If this is part of a VariableDeclaration, such as for 'const foo = exports.bar = ...', it should be translated into:\n\t\t// const foo = ...;\n\t\t// export {foo as bar}\n\t\telse if (variableDeclarationLocal != null) {\n\t\t\tconst local = exportsData.property;\n\t\t\tconst continuationResult = continuation(node.right);\n\n\t\t\tif (continuationResult == null || isArray(continuationResult) || (!isExpression(continuationResult, typescript) && !typescript.isIdentifier(continuationResult))) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst namedExports = factory.createNamedExports([\n\t\t\t\tlocal === variableDeclarationLocal.text\n\t\t\t\t\t? factory.createExportSpecifier(false, undefined, factory.createIdentifier(local))\n\t\t\t\t\t: factory.createExportSpecifier(false, variableDeclarationLocal.text, factory.createIdentifier(local))\n\t\t\t]);\n\n\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, namedExports));\n\t\t\treturn continuationResult;\n\t\t}\n\n\t\t// If the right-hand side is an identifier, this can safely be converted into an ExportDeclaration\n\t\t// such as 'export {foo}'\n\t\telse if (typescript.isIdentifier(right)) {\n\t\t\tconst local = exportsData.property;\n\t\t\tif (!context.isLocalExported(local)) {\n\t\t\t\tconst namedExports = factory.createNamedExports([\n\t\t\t\t\tlocal === right.text\n\t\t\t\t\t\t? factory.createExportSpecifier(false, undefined, factory.createIdentifier(local))\n\t\t\t\t\t\t: factory.createExportSpecifier(false, right.text, factory.createIdentifier(local))\n\t\t\t\t]);\n\t\t\t\tcontext.markLocalAsExported(local);\n\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, namedExports));\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Otherwise, this is something like 'exports.foo = function foo () {}'\n\t\telse if (isNamedDeclaration(right, typescript) && right.name != null && typescript.isIdentifier(right.name) && exportsData.property === right.name.text) {\n\t\t\tcontext.addTrailingStatements(ensureNodeHasExportModifier(right, context) as unknown as TS.Statement);\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Otherwise, this can be converted into a VariableStatement\n\t\telse {\n\t\t\tconst continuationResult = continuation(node.right);\n\n\t\t\tif (continuationResult == null || Array.isArray(continuationResult)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (!context.isLocalExported(exportsData.property)) {\n\t\t\t\tcontext.markLocalAsExported(exportsData.property);\n\n\t\t\t\tif (!isArray(continuationResult) && typescript.isIdentifier(continuationResult)) {\n\t\t\t\t\tconst namedExports = factory.createNamedExports([\n\t\t\t\t\t\tcontinuationResult.text === exportsData.property\n\t\t\t\t\t\t\t? factory.createExportSpecifier(false, undefined, factory.createIdentifier(exportsData.property))\n\t\t\t\t\t\t\t: factory.createExportSpecifier(false, factory.createIdentifier(continuationResult.text), factory.createIdentifier(exportsData.property))\n\t\t\t\t\t]);\n\t\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, namedExports, undefined));\n\t\t\t\t} else {\n\t\t\t\t\tconst freeIdentifier = context.getFreeIdentifier(exportsData.property);\n\n\t\t\t\t\t// If it is free, we can simply add an export modifier in front of the expression\n\t\t\t\t\tif (freeIdentifier === exportsData.property) {\n\t\t\t\t\t\tcontext.addTrailingStatements(\n\t\t\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\t\t\t[factory.createModifier(typescript.SyntaxKind.ExportKeyword)],\n\t\t\t\t\t\t\t\tfactory.createVariableDeclarationList(\n\t\t\t\t\t\t\t\t\t[factory.createVariableDeclaration(exportsData.property, undefined, undefined, continuationResult as TS.Expression)],\n\t\t\t\t\t\t\t\t\ttypescript.NodeFlags.Const\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst namedExports = factory.createNamedExports([factory.createExportSpecifier(false, freeIdentifier, exportsData.property)]);\n\n\t\t\t\t\t\t// If it isn't, we'll need to bind it to a variable with the free name, but then export it under the original one\n\t\t\t\t\t\tcontext.addTrailingStatements(\n\t\t\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tfactory.createVariableDeclarationList(\n\t\t\t\t\t\t\t\t\t[factory.createVariableDeclaration(freeIdentifier, undefined, undefined, continuationResult as TS.Expression)],\n\t\t\t\t\t\t\t\t\ttypescript.NodeFlags.Const\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfactory.createExportDeclaration(undefined, false, namedExports, undefined)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\treturn node;\n}\n","import type {TS} from \"../../type/ts.js\";\n\nexport function willReassignIdentifier(identifier: string, node: TS.Node, typescript: typeof TS): boolean {\n\tconst result = typescript.forEachChild<boolean>(node, nextNode => {\n\t\t// If it is an assignment to the given identifier\n\t\tif (\n\t\t\ttypescript.isBinaryExpression(nextNode) &&\n\t\t\tnextNode.operatorToken.kind === typescript.SyntaxKind.EqualsToken &&\n\t\t\ttypescript.isIdentifier(nextNode.left) &&\n\t\t\tnextNode.left.text === identifier\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (willReassignIdentifier(identifier, nextNode, typescript)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn;\n\t});\n\n\treturn result ?? false;\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport {isRequireCall} from \"../../util/is-require-call.js\";\nimport {walkThroughFillerNodes} from \"../../util/walk-through-filler-nodes.js\";\nimport {getModuleExportsFromRequireDataInContext} from \"../../util/get-module-exports-from-require-data-in-context.js\";\nimport type {TS} from \"../../../type/ts.js\";\nimport {willReassignIdentifier} from \"../../util/will-be-reassigned.js\";\nimport {findNodeUp} from \"../../util/find-node-up.js\";\nimport {maybeGenerateImportAttributes} from \"../../util/maybe-generate-import-attributes.js\";\nimport {hasExportModifier} from \"../../../shared/util/util.js\";\n\n/**\n * Visits the given VariableDeclaration\n */\nexport function visitVariableDeclaration({node, childContinuation, sourceFile, context}: BeforeVisitorOptions<TS.VariableDeclaration>): TS.VisitResult<TS.Node | undefined> {\n\tif (context.onlyExports || node.initializer == null) {\n\t\treturn childContinuation(node);\n\t}\n\n\tconst {typescript, factory} = context;\n\n\t// Most sophisticated require(...) handling comes from the CallExpression visitor, but this Visitor is for rewriting simple\n\t// 'foo = require(\"bar\")' or '{foo} = require(\"bar\")' as well as '{foo: bar} = require(\"bar\")' expressions\n\n\tconst initializer = walkThroughFillerNodes(node.initializer, typescript);\n\tconst statement = findNodeUp(node, typescript.isVariableStatement, n => typescript.isBlock(n) || typescript.isSourceFile(n));\n\n\tif (!typescript.isCallExpression(initializer)) {\n\t\treturn childContinuation(node);\n\t}\n\n\t// Check if the initializer represents a require(...) call.\n\tconst requireData = isRequireCall(initializer, sourceFile, context);\n\n\t// If it doesn't, proceed without applying any transformations\n\tif (!requireData.match) {\n\t\treturn childContinuation(node);\n\t}\n\n\t// Otherwise, spread out the things we know about the require call\n\tconst {moduleSpecifier, transformedModuleSpecifier} = requireData;\n\n\t// If no module specifier could be determined, proceed with the child continuation\n\tif (moduleSpecifier == null || transformedModuleSpecifier == null) {\n\t\treturn childContinuation(node);\n\t}\n\n\t// If we've been able to resolve a module as well as its contents,\n\t// Check it for exports so that we know more about its internals, for example whether or not it has any named exports, etc\n\tconst moduleExports = getModuleExportsFromRequireDataInContext(requireData, context);\n\n\t// This will be something like 'foo = require(\"bar\")\n\tif (typescript.isIdentifier(node.name)) {\n\t\t// If the default export is already imported under the same local name as this VariableDeclaration binds,\n\t\t// proceed from the child continuation for more sophisticated behavior\n\t\tif ((moduleExports == null || moduleExports.hasDefaultExport) && context.hasLocalForDefaultImportFromModule(moduleSpecifier)) {\n\t\t\treturn childContinuation(node);\n\t\t}\n\n\t\t// If the namespace is already imported, under the same local name as this VariableDeclaration binds,\n\t\t// proceed from the child continuation for more sophisticated behavior\n\t\telse if (moduleExports != null && !moduleExports.hasDefaultExport && context.hasLocalForNamespaceImportFromModule(moduleSpecifier)) {\n\t\t\treturn childContinuation(node);\n\t\t}\n\n\t\t// Otherwise, the 'foo = require(\"bar\")' VariableDeclaration is part of an Exported VariableStatement such as 'export const foo = require(\"bar\")',\n\t\t// and it should preferably be converted into an ExportDeclaration\n\t\telse if (statement != null && hasExportModifier(statement, typescript)) {\n\t\t\tconst moduleSpecifierExpression = factory.createStringLiteral(transformedModuleSpecifier);\n\n\t\t\tif (moduleExports == null || moduleExports.hasDefaultExport) {\n\t\t\t\tconst exportClause = factory.createNamedExports([\n\t\t\t\t\tfactory.createExportSpecifier(false, node.name.text === \"default\" ? undefined : factory.createIdentifier(\"default\"), factory.createIdentifier(node.name.text))\n\t\t\t\t]);\n\n\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, exportClause, moduleSpecifierExpression));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Otherwise, if the TypeScript version supports named namespace exports\n\t\t\telse if ((factory as {createNamespaceExport?: typeof factory.createNamespaceExport}).createNamespaceExport != null) {\n\t\t\t\tconst exportClause = factory.createNamespaceExport(factory.createIdentifier(node.name.text));\n\n\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, exportClause, moduleSpecifierExpression));\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Otherwise, for older TypeScript versions, we'll have to first import and then re-export the namespace\n\t\t\telse {\n\t\t\t\tcontext.addImport(\n\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(factory.createIdentifier(node.name.text))),\n\t\t\t\t\t\tmoduleSpecifierExpression,\n\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t),\n\t\t\t\t\tmoduleSpecifier\n\t\t\t\t);\n\t\t\t\tconst exportClause = factory.createNamedExports([factory.createExportSpecifier(false, undefined, factory.createIdentifier(node.name.text))]);\n\t\t\t\tcontext.addTrailingStatements(factory.createExportDeclaration(undefined, false, exportClause));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise, the 'foo = require(\"bar\")' VariableDeclaration can be safely transformed into a simple import such as 'import foo from \"bar\"' or 'import * as foo from \"bar\"',\n\t\t// depending on whether or not the module has a default export\n\t\telse {\n\t\t\tconst willReassign = willReassignIdentifier(node.name.text, sourceFile, typescript);\n\t\t\tconst newName = willReassign ? context.getFreeIdentifier(node.name.text, true) : node.name.text;\n\n\t\t\tcontext.addImport(\n\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\tundefined,\n\n\t\t\t\t\tmoduleExports == null || moduleExports.hasDefaultExport\n\t\t\t\t\t\t? // Import the default if it has any (or if we don't know if it has)\n\t\t\t\t\t\t\tfactory.createImportClause(false, factory.createIdentifier(newName), undefined)\n\t\t\t\t\t\t: // Otherwise, import the entire namespace\n\t\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamespaceImport(factory.createIdentifier(newName))),\n\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports?.withValue)\n\t\t\t\t),\n\t\t\t\tmoduleSpecifier\n\t\t\t);\n\t\t\tif (willReassign) {\n\t\t\t\t// Now, immediately add a local mutable variable with the correct name\n\t\t\t\tcontext.addLeadingStatements(\n\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfactory.createVariableDeclarationList(\n\t\t\t\t\t\t\t[factory.createVariableDeclaration(node.name.text, undefined, undefined, factory.createIdentifier(newName))],\n\t\t\t\t\t\t\ttypescript.NodeFlags.Let\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t// This will be something like '{foo} = require(\"bar\")', '{foo, bar} = require(\"bar\")', '{foo: bar} = require(\"bar\")', or event '{foo: {bar: baz}} = require(\"bar\")'.\n\t// We will only consider the simplest variants of these before opting out and letting the CallExpression visitor handle more sophisticated behavior\n\telse if (moduleExports != null && typescript.isObjectBindingPattern(node.name)) {\n\t\tconst importSpecifiers: TS.ImportSpecifier[] = [];\n\t\tfor (const element of node.name.elements) {\n\t\t\t// When the propertyName is null, the name will always be an identifier.\n\t\t\t// This will be something like '{foo} = require(\"bar\")'\n\t\t\tif (element.propertyName == null && typescript.isIdentifier(element.name)) {\n\t\t\t\t// If there is no named export matching the identifier, opt out and proceed with the\n\t\t\t\t// child continuation for more sophisticated handling\n\t\t\t\tif (!moduleExports.namedExports.has(element.name.text)) {\n\t\t\t\t\treturn childContinuation(node);\n\t\t\t\t}\n\n\t\t\t\timportSpecifiers.push(factory.createImportSpecifier(false, undefined, factory.createIdentifier(element.name.text)));\n\t\t\t}\n\n\t\t\t// This will be something like '{foo: bar} = require(\"bar\")'\n\t\t\telse if (element.propertyName != null && typescript.isIdentifier(element.propertyName) && typescript.isIdentifier(element.name)) {\n\t\t\t\t// If there is no named export matching the identifier of the property name, opt out and proceed with the\n\t\t\t\t// child continuation for more sophisticated handling\n\t\t\t\tif (!moduleExports.namedExports.has(element.propertyName.text)) {\n\t\t\t\t\treturn childContinuation(node);\n\t\t\t\t}\n\n\t\t\t\timportSpecifiers.push(factory.createImportSpecifier(false, factory.createIdentifier(element.propertyName.text), factory.createIdentifier(element.name.text)));\n\t\t\t} else {\n\t\t\t\t// Opt out and proceed with the child continuation for more sophisticated handling\n\t\t\t\treturn childContinuation(node);\n\t\t\t}\n\t\t}\n\t\t// If more than 0 import specifier was generated, add an ImportDeclaration and remove this VariableDeclaration\n\t\tif (importSpecifiers.length > 0) {\n\t\t\tconst importSpecifiersThatWillBeReassigned = importSpecifiers.filter(importSpecifier => willReassignIdentifier(importSpecifier.name.text, sourceFile, typescript));\n\t\t\tconst otherImportSpecifiers = importSpecifiers.filter(importSpecifier => !importSpecifiersThatWillBeReassigned.includes(importSpecifier));\n\n\t\t\t// Add an import, but bind the name to free identifier\n\t\t\tfor (const importSpecifier of importSpecifiersThatWillBeReassigned) {\n\t\t\t\tconst propertyName = importSpecifier.propertyName ?? importSpecifier.name;\n\t\t\t\tconst newName = context.getFreeIdentifier(importSpecifier.name.text, true);\n\n\t\t\t\tconst namedImports = factory.createNamedImports([factory.createImportSpecifier(false, factory.createIdentifier(propertyName.text), factory.createIdentifier(newName))]);\n\n\t\t\t\tcontext.addImport(\n\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfactory.createImportClause(false, undefined, namedImports),\n\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t),\n\t\t\t\t\tmoduleSpecifier\n\t\t\t\t);\n\n\t\t\t\t// Now, immediately add a local mutable variable with the correct name\n\t\t\t\tcontext.addLeadingStatements(\n\t\t\t\t\tfactory.createVariableStatement(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfactory.createVariableDeclarationList(\n\t\t\t\t\t\t\t[factory.createVariableDeclaration(importSpecifier.name.text, undefined, undefined, factory.createIdentifier(newName))],\n\t\t\t\t\t\t\ttypescript.NodeFlags.Let\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (otherImportSpecifiers.length > 0) {\n\t\t\t\tcontext.addImport(\n\t\t\t\t\tfactory.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfactory.createImportClause(false, undefined, factory.createNamedImports(otherImportSpecifiers)),\n\t\t\t\t\t\tfactory.createStringLiteral(transformedModuleSpecifier),\n\t\t\t\t\t\tmaybeGenerateImportAttributes(context, transformedModuleSpecifier, moduleExports.withValue)\n\t\t\t\t\t),\n\t\t\t\t\tmoduleSpecifier\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t// Otherwise, proceed with the child continuation\n\treturn childContinuation(node);\n}\n","import type {TS} from \"../../../type/ts.js\";\n\nexport function isNotEmittedStatement(node: TS.Node, typescript: typeof TS): node is TS.NotEmittedStatement {\n\treturn node.kind === typescript.SyntaxKind.NotEmittedStatement;\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport {isNotEmittedStatement} from \"./is-not-emitted-statement.js\";\nimport type {TS} from \"../../../type/ts.js\";\nimport {isArray} from \"../../../shared/util/util.js\";\n\n/**\n * Visits the given VariableDeclarationList\n */\nexport function visitVariableDeclarationList({node, childContinuation, context}: BeforeVisitorOptions<TS.VariableDeclarationList>): TS.VisitResult<TS.Node | undefined> {\n\tif (context.onlyExports) {\n\t\treturn childContinuation(node);\n\t}\n\n\tconst {typescript, factory} = context;\n\tconst continuationResult = childContinuation(node);\n\n\t// If the result isn't a new VariableDeclarationList, return that result\n\tif (continuationResult == null || isArray(continuationResult) || !typescript.isVariableDeclarationList(continuationResult)) {\n\t\treturn continuationResult;\n\t}\n\n\t// Check if there are any VariableDeclarations left to be emitted\n\tconst remainingDeclarations = continuationResult.declarations.filter(declaration => !isNotEmittedStatement(declaration, typescript));\n\t// If not, return the continuation result\n\tif (remainingDeclarations.length === 0) return continuationResult;\n\n\t// Otherwise, return an updated version of the declaration list, preserving only those declarations that should be emitted\n\treturn factory.updateVariableDeclarationList(node, remainingDeclarations);\n}\n","import {getExportsData} from \"./get-exports-data.js\";\nimport {isExpression} from \"./is-expression.js\";\nimport {walkThroughFillerNodes} from \"./walk-through-filler-nodes.js\";\nimport type {BeforeVisitorOptions} from \"../visitor/before-visitor-options.js\";\nimport type {TS} from \"../../type/ts.js\";\n\nfunction hasExportAssignments(node: TS.Node, exportsName: string, typescript: typeof TS): boolean {\n\tconst result = typescript.forEachChild<boolean>(node, nextNode => {\n\t\tif (isExpression(nextNode, typescript)) {\n\t\t\tif (getExportsData(nextNode, exportsName, typescript) != null) return true;\n\t\t}\n\t\tif (hasExportAssignments(nextNode, exportsName, typescript)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn;\n\t});\n\n\treturn result ?? false;\n}\n\nexport function getBestBodyInScope({node, context}: BeforeVisitorOptions<TS.Node>): TS.Node | undefined {\n\tconst {typescript, factory} = context;\n\tif (!typescript.isSourceFile(node)) {\n\t\treturn node;\n\t}\n\n\tconst [firstStatement] = node.statements;\n\tif (firstStatement == null || !typescript.isExpressionStatement(firstStatement)) return node;\n\tconst expression = walkThroughFillerNodes(firstStatement.expression, typescript);\n\n\tif (!typescript.isCallExpression(expression)) return node;\n\tconst expressionExpression = walkThroughFillerNodes(expression.expression, typescript);\n\tif (!typescript.isFunctionExpression(expressionExpression)) return node;\n\tif (expression.arguments.length < 2) return node;\n\tlet [, secondArgument] = expression.arguments;\n\tif (secondArgument == null) return node;\n\n\tsecondArgument = walkThroughFillerNodes(secondArgument, typescript);\n\tif (!typescript.isFunctionExpression(secondArgument)) return node;\n\tif (secondArgument.parameters.length < 1) return node;\n\tconst [firstBodyParameter] = secondArgument.parameters;\n\n\tif (firstBodyParameter == null || !typescript.isIdentifier(firstBodyParameter.name)) return node;\n\tif (hasExportAssignments(secondArgument.body, firstBodyParameter.name.text, typescript)) {\n\t\tcontext.exportsName = firstBodyParameter.name.text;\n\n\t\treturn factory.updateSourceFile(\n\t\t\tnode,\n\t\t\t[...secondArgument.body.statements, ...node.statements.slice(1)],\n\t\t\tnode.isDeclarationFile,\n\t\t\tnode.referencedFiles,\n\t\t\tnode.typeReferenceDirectives,\n\t\t\tnode.hasNoDefaultLib,\n\t\t\tnode.libReferenceDirectives\n\t\t);\n\t}\n\n\treturn node;\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport {visitCallExpression} from \"./visit-call-expression.js\";\nimport {visitBinaryExpression} from \"./visit-binary-expression.js\";\nimport {visitVariableDeclaration} from \"./visit-variable-declaration.js\";\nimport {visitVariableDeclarationList} from \"./visit-variable-declaration-list.js\";\nimport {getBestBodyInScope} from \"../../util/get-best-body-in-scope.js\";\nimport type {TS} from \"../../../type/ts.js\";\n\n/**\n * Visits the given Node\n */\nexport function visitNode<T extends TS.Node>(options: BeforeVisitorOptions<T>): TS.VisitResult<TS.Node | undefined> {\n\tconst {typescript} = options.context;\n\tconst bestNode = getBestBodyInScope(options);\n\tif (bestNode != null && bestNode !== options.node) {\n\t\treturn options.childContinuation(bestNode);\n\t}\n\n\tif (typescript.isVariableDeclarationList(options.node)) {\n\t\treturn visitVariableDeclarationList(options as unknown as BeforeVisitorOptions<TS.VariableDeclarationList>);\n\t} else if (typescript.isVariableDeclaration(options.node)) {\n\t\treturn visitVariableDeclaration(options as unknown as BeforeVisitorOptions<TS.VariableDeclaration>);\n\t} else if (typescript.isBinaryExpression(options.node)) {\n\t\treturn visitBinaryExpression(options as unknown as BeforeVisitorOptions<TS.BinaryExpression>);\n\t} else if (typescript.isCallExpression(options.node)) {\n\t\treturn visitCallExpression(options as unknown as BeforeVisitorOptions<TS.CallExpression>);\n\t}\n\n\treturn options.childContinuation(options.node);\n}\n","import {visitNode} from \"./visitor/visit/visit-node.js\";\nimport type {BeforeTransformerSourceFileStepResult, BeforeVisitorContext} from \"./visitor/before-visitor-context.js\";\nimport type {BeforeVisitorOptions} from \"./visitor/before-visitor-options.js\";\nimport {check} from \"reserved-words\";\nimport {isNamedDeclaration} from \"./util/is-named-declaration.js\";\nimport {getLocalsForBindingName} from \"./util/get-locals-for-binding-name.js\";\nimport {shouldSkipEmit} from \"./util/should-skip-emit.js\";\nimport type {ModuleExports} from \"./module-exports/module-exports.js\";\nimport {visitImportAndExportDeclarations} from \"./visitor/visit/visit-import-and-export-declarations.js\";\nimport type {TS} from \"../type/ts.js\";\nimport {shouldDebug} from \"./util/should-debug.js\";\nimport path from \"crosspath\";\nimport type {VisitorContext} from \"./visitor-context.js\";\nimport {hasDefaultExportModifier, hasExportModifier} from \"../shared/util/util.js\";\n\nexport function transformSourceFile(sourceFile: TS.SourceFile, context: VisitorContext): BeforeTransformerSourceFileStepResult {\n\t// Take a fast path of the text of the SourceFile doesn't contain anything that can be transformed\n\tif (!context.onlyExports && !sourceFile.text.includes(\"require\") && !sourceFile.text.includes(\"exports\")) {\n\t\treturn {sourceFile, exports: {namedExports: new Set(), hasDefaultExport: false}};\n\t}\n\n\tconst {typescript, factory, transformationContext} = context;\n\n\t// Prepare a VisitorContext\n\tconst visitorContext = ((): BeforeVisitorContext => {\n\t\tconst imports = new Map<TS.ImportDeclaration, {originalModuleSpecifier: string; noEmit: boolean}>();\n\t\tconst leadingStatements: TS.Statement[] = [];\n\t\tconst trailingStatements: TS.Statement[] = [];\n\t\tconst moduleExportsMap = new Map<string, ModuleExports>();\n\t\tconst localsMap = (sourceFile as {locals?: Map<string, symbol>}).locals;\n\t\tconst locals = localsMap == null ? new Set() : new Set(localsMap.keys());\n\t\tconst exportedLocals = new Set<string>();\n\t\tlet isDefaultExported = false;\n\n\t\tconst addImport = (declaration: TS.ImportDeclaration, originalModuleSpecifier: string, noEmit = false): void => {\n\t\t\timports.set(declaration, {originalModuleSpecifier, noEmit});\n\t\t};\n\n\t\tconst markLocalAsExported = (local: string): void => {\n\t\t\texportedLocals.add(local);\n\t\t};\n\n\t\tconst isLocalExported = (local: string): boolean => exportedLocals.has(local);\n\n\t\tconst markDefaultAsExported = (): void => {\n\t\t\tisDefaultExported = true;\n\t\t};\n\n\t\tconst addLocal = (local: string): void => {\n\t\t\tlocals.add(local);\n\t\t};\n\n\t\tconst getImportDeclarationWithModuleSpecifier = (moduleSpecifier: string): TS.ImportDeclaration | undefined =>\n\t\t\t[...imports.entries()].find(([, {originalModuleSpecifier}]) => originalModuleSpecifier === moduleSpecifier)?.[0];\n\n\t\tconst isModuleSpecifierImportedWithoutLocals = (moduleSpecifier: string): boolean => {\n\t\t\tconst matchingDeclaration = getImportDeclarationWithModuleSpecifier(moduleSpecifier);\n\t\t\tif (matchingDeclaration == null) return false;\n\t\t\treturn matchingDeclaration.importClause == null || (matchingDeclaration.importClause.name == null && matchingDeclaration.importClause.namedBindings == null);\n\t\t};\n\n\t\tconst getLocalForDefaultImportFromModule = (moduleSpecifier: string): string | undefined => {\n\t\t\tconst matchingDeclaration = getImportDeclarationWithModuleSpecifier(moduleSpecifier);\n\t\t\tif (matchingDeclaration == null) return undefined;\n\t\t\tif (matchingDeclaration.importClause?.name == null) return undefined;\n\t\t\treturn matchingDeclaration.importClause.name.text;\n\t\t};\n\n\t\tconst hasLocalForDefaultImportFromModule = (moduleSpecifier: string): boolean => getLocalForDefaultImportFromModule(moduleSpecifier) != null;\n\n\t\tconst getLocalForNamespaceImportFromModule = (moduleSpecifier: string): string | undefined => {\n\t\t\tconst matchingDeclaration = getImportDeclarationWithModuleSpecifier(moduleSpecifier);\n\t\t\tif (matchingDeclaration == null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (matchingDeclaration.importClause?.namedBindings == null || !typescript.isNamespaceImport(matchingDeclaration.importClause.namedBindings)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn matchingDeclaration.importClause.namedBindings.name.text;\n\t\t};\n\n\t\tconst hasLocalForNamespaceImportFromModule = (moduleSpecifier: string): boolean => getLocalForNamespaceImportFromModule(moduleSpecifier) != null;\n\n\t\tconst getLocalForNamedImportPropertyNameFromModule = (propertyName: string, moduleSpecifier: string): string | undefined => {\n\t\t\tconst matchingDeclaration = getImportDeclarationWithModuleSpecifier(moduleSpecifier);\n\t\t\tif (matchingDeclaration == null) return undefined;\n\t\t\tif (matchingDeclaration.importClause?.namedBindings == null || !typescript.isNamedImports(matchingDeclaration.importClause.namedBindings)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tfor (const element of matchingDeclaration.importClause.namedBindings.elements) {\n\t\t\t\tif (element.propertyName != null && element.propertyName.text === propertyName) return element.name.text;\n\t\t\t\telse if (element.propertyName == null && element.name.text === propertyName) return element.name.text;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst hasLocalForNamedImportPropertyNameFromModule = (propertyName: string, moduleSpecifier: string): boolean =>\n\t\t\tgetLocalForNamedImportPropertyNameFromModule(propertyName, moduleSpecifier) != null;\n\n\t\tconst addTrailingStatements = (...statements: TS.Statement[]): void => {\n\t\t\ttrailingStatements.push(...statements);\n\t\t};\n\n\t\tconst addLeadingStatements = (...statements: TS.Statement[]): void => {\n\t\t\tleadingStatements.push(...statements);\n\t\t};\n\n\t\tconst isIdentifierFree = (identifier: string): boolean =>\n\t\t\t// It should not be part of locals of the module already\n\t\t\t!locals.has(identifier) &&\n\t\t\t// It should not be a reserved word in any environment\n\t\t\t!check(identifier, \"es3\", true) &&\n\t\t\t!check(identifier, \"es5\", true) &&\n\t\t\t!check(identifier, \"es2015\", true);\n\n\t\tconst ignoreIdentifier = (identifier: string): boolean => locals.delete(identifier);\n\n\t\tconst getFreeIdentifier = (candidate: string, force = false): string => {\n\t\t\tconst suffix = \"$\";\n\t\t\tlet counter = 0;\n\n\t\t\tif (isIdentifierFree(candidate) && !force) {\n\t\t\t\taddLocal(candidate);\n\t\t\t\treturn candidate;\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tconst currentCandidate = candidate + suffix + String(counter);\n\t\t\t\tif (!isIdentifierFree(currentCandidate)) {\n\t\t\t\t\tcounter++;\n\t\t\t\t} else {\n\t\t\t\t\taddLocal(currentCandidate);\n\t\t\t\t\treturn currentCandidate;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\t...context,\n\t\t\ttransformSourceFile,\n\t\t\texportsName: undefined,\n\t\t\taddImport,\n\t\t\taddLocal,\n\t\t\tmarkLocalAsExported,\n\t\t\tmarkDefaultAsExported,\n\t\t\tisLocalExported,\n\t\t\tisModuleSpecifierImportedWithoutLocals,\n\t\t\tgetImportDeclarationWithModuleSpecifier,\n\t\t\tgetLocalForDefaultImportFromModule,\n\t\t\thasLocalForDefaultImportFromModule,\n\t\t\tgetLocalForNamespaceImportFromModule,\n\t\t\thasLocalForNamespaceImportFromModule,\n\t\t\tgetLocalForNamedImportPropertyNameFromModule,\n\t\t\thasLocalForNamedImportPropertyNameFromModule,\n\t\t\taddLeadingStatements,\n\t\t\taddTrailingStatements,\n\t\t\tisIdentifierFree,\n\t\t\tgetFreeIdentifier,\n\t\t\tignoreIdentifier,\n\t\t\tgetModuleExportsForPath: p => moduleExportsMap.get(path.normalize(p)),\n\t\t\taddModuleExportsForPath: (p, exports) => moduleExportsMap.set(path.normalize(p), exports),\n\t\t\tget imports() {\n\t\t\t\treturn [...imports.entries()].filter(([, {noEmit}]) => !noEmit).map(([declaration]) => declaration);\n\t\t\t},\n\t\t\tget leadingStatements() {\n\t\t\t\treturn leadingStatements;\n\t\t\t},\n\t\t\tget trailingStatements() {\n\t\t\t\treturn trailingStatements;\n\t\t\t},\n\t\t\tget isDefaultExported() {\n\t\t\t\treturn isDefaultExported;\n\t\t\t},\n\t\t\tget exportedLocals() {\n\t\t\t\treturn exportedLocals;\n\t\t\t}\n\t\t};\n\t})();\n\n\tconst visitorBaseOptions: Pick<BeforeVisitorOptions<TS.Node>, Exclude<keyof BeforeVisitorOptions<TS.Node>, \"node\" | \"sourceFile\">> = {\n\t\tcontext: visitorContext,\n\n\t\tcontinuation: node =>\n\t\t\tvisitNode({\n\t\t\t\t...visitorBaseOptions,\n\t\t\t\tsourceFile,\n\t\t\t\tnode\n\t\t\t}),\n\t\tchildContinuation: node =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tcbNode => {\n\t\t\t\t\tconst visitResult = visitNode({\n\t\t\t\t\t\t...visitorBaseOptions,\n\t\t\t\t\t\tsourceFile,\n\t\t\t\t\t\tnode: cbNode\n\t\t\t\t\t});\n\t\t\t\t\tif (shouldSkipEmit(visitResult, typescript)) {\n\t\t\t\t\t\treturn factory.createNotEmittedStatement(cbNode);\n\t\t\t\t\t}\n\t\t\t\t\treturn visitResult;\n\t\t\t\t},\n\t\t\t\ttransformationContext\n\t\t\t)\n\t};\n\n\tconst importVisitorBaseOptions: Pick<BeforeVisitorOptions<TS.Node>, Exclude<keyof BeforeVisitorOptions<TS.Node>, \"node\" | \"sourceFile\">> = {\n\t\tcontext: visitorContext,\n\n\t\tcontinuation: node =>\n\t\t\tvisitImportAndExportDeclarations({\n\t\t\t\t...importVisitorBaseOptions,\n\t\t\t\tsourceFile,\n\t\t\t\tnode\n\t\t\t}),\n\t\tchildContinuation: node =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tcbNode => {\n\t\t\t\t\tconst visitResult = visitImportAndExportDeclarations({\n\t\t\t\t\t\t...importVisitorBaseOptions,\n\t\t\t\t\t\tsourceFile,\n\t\t\t\t\t\tnode: cbNode\n\t\t\t\t\t});\n\t\t\t\t\tif (shouldSkipEmit(visitResult, typescript)) {\n\t\t\t\t\t\treturn factory.createNotEmittedStatement(cbNode);\n\t\t\t\t\t}\n\t\t\t\t\treturn visitResult;\n\t\t\t\t},\n\t\t\t\ttransformationContext\n\t\t\t)\n\t};\n\n\t// Visit all imports and exports first\n\tvisitImportAndExportDeclarations({...importVisitorBaseOptions, sourceFile, node: sourceFile});\n\n\tlet updatedSourceFile = visitNode({...visitorBaseOptions, sourceFile, node: sourceFile}) as TS.SourceFile;\n\n\tconst allImports: TS.Statement[] = [\n\t\t...visitorContext.imports,\n\t\t...visitorContext.leadingStatements.filter(typescript.isImportDeclaration),\n\t\t...updatedSourceFile.statements.filter(typescript.isImportDeclaration),\n\t\t...visitorContext.trailingStatements.filter(typescript.isImportDeclaration)\n\t];\n\n\tconst allExports: TS.Statement[] = [\n\t\t...visitorContext.leadingStatements.filter(statement => typescript.isExportDeclaration(statement) || typescript.isExportAssignment(statement)),\n\t\t...updatedSourceFile.statements.filter(statement => typescript.isExportDeclaration(statement) || typescript.isExportAssignment(statement)),\n\t\t...visitorContext.trailingStatements.filter(statement => typescript.isExportDeclaration(statement) || typescript.isExportAssignment(statement))\n\t];\n\n\tconst allOtherStatements = [\n\t\t...visitorContext.leadingStatements.filter(statement => !allImports.includes(statement) && !allExports.includes(statement)),\n\t\t...updatedSourceFile.statements.filter(\n\t\t\tstatement => !allImports.includes(statement) && !allExports.includes(statement) && statement.kind !== typescript.SyntaxKind.NotEmittedStatement\n\t\t),\n\t\t...visitorContext.trailingStatements.filter(statement => !allImports.includes(statement) && !allExports.includes(statement))\n\t];\n\n\tupdatedSourceFile = factory.updateSourceFile(\n\t\tupdatedSourceFile,\n\t\t[...allImports, ...allOtherStatements, ...allExports],\n\t\tsourceFile.isDeclarationFile,\n\t\tsourceFile.referencedFiles,\n\t\tsourceFile.typeReferenceDirectives,\n\t\tsourceFile.hasNoDefaultLib,\n\t\tsourceFile.libReferenceDirectives\n\t);\n\n\t// Update the SourceFile with the extra statements\n\tconst moduleExports: ModuleExports = {\n\t\thasDefaultExport: false,\n\t\tnamedExports: new Set()\n\t};\n\n\tfor (const statement of updatedSourceFile.statements) {\n\t\tif (typescript.isExportDeclaration(statement) && statement.exportClause != null && typescript.isNamedExports(statement.exportClause)) {\n\t\t\tfor (const element of statement.exportClause.elements) {\n\t\t\t\tmoduleExports.namedExports.add(element.name.text);\n\t\t\t}\n\t\t} else if (typescript.isExportAssignment(statement)) {\n\t\t\tmoduleExports.hasDefaultExport = true;\n\t\t} else if (hasExportModifier(statement, typescript)) {\n\t\t\tif (hasDefaultExportModifier(statement, typescript)) {\n\t\t\t\tmoduleExports.hasDefaultExport = true;\n\t\t\t} else if (typescript.isVariableStatement(statement)) {\n\t\t\t\tfor (const declaration of statement.declarationList.declarations) {\n\t\t\t\t\tfor (const local of getLocalsForBindingName(declaration.name, typescript)) {\n\t\t\t\t\t\tmoduleExports.namedExports.add(local);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isNamedDeclaration(statement, typescript) && statement.name != null && typescript.isIdentifier(statement.name)) {\n\t\t\t\tmoduleExports.namedExports.add(statement.name.text);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Add the relevant module exports for the SourceFile\n\tvisitorContext.addModuleExportsForPath(path.normalize(sourceFile.fileName), moduleExports);\n\tif (!visitorContext.onlyExports && shouldDebug(visitorContext.debug, sourceFile) && visitorContext.printer != null) {\n\t\tvisitorContext.logger.debug(\"===\", path.native.normalize(sourceFile.fileName), \"===\");\n\t\tvisitorContext.logger.debug(visitorContext.printer.printFile(updatedSourceFile));\n\t\tvisitorContext.logger.debug(\"EXPORTS:\", visitorContext.exportedLocals);\n\t}\n\n\treturn {\n\t\tsourceFile: updatedSourceFile,\n\t\texports: moduleExports\n\t};\n}\n","import {isNotEmittedStatement} from \"../visitor/visit/is-not-emitted-statement.js\";\nimport type {TS} from \"../../type/ts.js\";\nimport {isArray} from \"../../shared/util/util.js\";\n\n/**\n * Returns true if the given Node contains an empty child\n */\nexport function shouldSkipEmit(node: TS.VisitResult<TS.Node | undefined>, typescript: typeof TS): boolean {\n\tif (node == null) return true;\n\tif (isArray(node)) return node.some(otherNode => shouldSkipEmit(otherNode, typescript));\n\tif (typescript.isSourceFile(node)) return false;\n\tif (typescript.isBlock(node)) return false;\n\treturn isNotEmittedStatement(node, typescript) || Boolean(typescript.forEachChild<boolean>(node, nextNode => shouldSkipEmit(nextNode, typescript)));\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport type {TS} from \"../../../type/ts.js\";\n\n/**\n * Visits the given ImportDeclaration\n */\nexport function visitImportDeclaration({node, context}: BeforeVisitorOptions<TS.ImportDeclaration>): TS.VisitResult<TS.Node | undefined> {\n\tif (!context.typescript.isStringLiteralLike(node.moduleSpecifier)) return undefined;\n\n\tcontext.addImport(node, node.moduleSpecifier.text, true);\n\treturn undefined;\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport type {TS} from \"../../../type/ts.js\";\n\n/**\n * Visits the given ExportDeclaration\n */\nexport function visitExportDeclaration({node, context}: BeforeVisitorOptions<TS.ExportDeclaration>): TS.VisitResult<TS.Node | undefined> {\n\tif (node.exportClause != null && context.typescript.isNamedExports(node.exportClause)) {\n\t\tfor (const element of node.exportClause.elements) {\n\t\t\t// If the name is 'default' that name is considered special since it represents the default export\n\t\t\t// rather than a named export\n\t\t\tif (element.name.text === \"default\") {\n\t\t\t\tcontext.markDefaultAsExported();\n\t\t\t} else {\n\t\t\t\t// Mark the name as a named export. If the propertyName is different, that's fine\n\t\t\t\t// - we care about the exported binding name, nothing else\n\t\t\t\tcontext.markLocalAsExported(element.name.text);\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport type {TS} from \"../../../type/ts.js\";\n\n/**\n * Visits the given ExportAssignment\n */\nexport function visitExportAssignment({context}: BeforeVisitorOptions<TS.ExportAssignment>): TS.VisitResult<TS.Node | undefined> {\n\tcontext.markDefaultAsExported();\n\treturn undefined;\n}\n","import type {BeforeVisitorOptions} from \"../before-visitor-options.js\";\nimport {visitImportDeclaration} from \"./visit-import-declaration.js\";\nimport {visitExportDeclaration} from \"./visit-export-declaration.js\";\nimport {visitExportAssignment} from \"./visit-export-assignment.js\";\nimport {isDeclaration} from \"../../util/is-declaration.js\";\nimport {getLocalsForBindingName} from \"../../util/get-locals-for-binding-name.js\";\nimport type {TS} from \"../../../type/ts.js\";\nimport {hasDefaultExportModifier, hasExportModifier} from \"../../../shared/util/util.js\";\n\n/**\n * Visits the given Node\n *\n * @param options\n * @returns\n */\nexport function visitImportAndExportDeclarations<T extends TS.Node>(options: BeforeVisitorOptions<T>): TS.VisitResult<TS.Node | undefined> {\n\tconst {typescript} = options.context;\n\tif (typescript.isImportDeclaration(options.node)) {\n\t\treturn visitImportDeclaration(options as unknown as BeforeVisitorOptions<TS.ImportDeclaration>);\n\t} else if (typescript.isExportDeclaration(options.node)) {\n\t\treturn visitExportDeclaration(options as unknown as BeforeVisitorOptions<TS.ExportDeclaration>);\n\t} else if (typescript.isExportAssignment(options.node)) {\n\t\treturn visitExportAssignment(options as unknown as BeforeVisitorOptions<TS.ExportAssignment>);\n\t} else if (hasDefaultExportModifier(options.node, typescript)) {\n\t\toptions.context.markDefaultAsExported();\n\t} else if (hasExportModifier(options.node, typescript)) {\n\t\tif (isDeclaration(options.node, typescript)) {\n\t\t\tconst declarationName = typescript.getNameOfDeclaration(options.node);\n\t\t\tif (declarationName != null && typescript.isIdentifier(declarationName)) {\n\t\t\t\toptions.context.markLocalAsExported(declarationName.text);\n\t\t\t}\n\t\t} else if (typescript.isVariableStatement(options.node)) {\n\t\t\tfor (const declaration of options.node.declarationList.declarations) {\n\t\t\t\tfor (const local of getLocalsForBindingName(declaration.name, typescript)) {\n\t\t\t\t\toptions.context.markLocalAsExported(local);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn options.childContinuation(options.node);\n}\n","import fs from \"fs\";\n\nexport type ReadonlyFileSystem = Pick<typeof fs, \"statSync\" | \"lstatSync\" | \"readFileSync\" | \"readdirSync\">;\n\nexport interface SafeReadonlyFileSystem extends ReadonlyFileSystem {\n\tsafeStatSync: (path: string) => fs.Stats | undefined;\n\tsafeReadFileSync: (path: string) => Buffer | undefined;\n}\n\nexport type FileSystem = ReadonlyFileSystem & Pick<typeof fs, \"writeFileSync\" | \"mkdirSync\">;\nexport type SafeFileSystem = SafeReadonlyFileSystem & Pick<typeof fs, \"writeFileSync\" | \"mkdirSync\">;\n\nexport const realReadonlyFileSystem: ReadonlyFileSystem = {\n\tstatSync: fs.statSync,\n\tlstatSync: fs.lstatSync,\n\treaddirSync: fs.readdirSync,\n\treadFileSync: fs.readFileSync\n};\n\nexport const realFileSystem: FileSystem = {\n\t...realReadonlyFileSystem,\n\tmkdirSync: fs.mkdirSync,\n\twriteFileSync: fs.writeFileSync\n};\n\nexport function createSafeFileSystem(fileSystem: FileSystem): SafeFileSystem;\nexport function createSafeFileSystem(fileSystem: ReadonlyFileSystem): SafeReadonlyFileSystem;\nexport function createSafeFileSystem(fileSystem: FileSystem | ReadonlyFileSystem): SafeFileSystem | SafeReadonlyFileSystem {\n\treturn {\n\t\t...fileSystem,\n\n\t\tsafeReadFileSync: path => {\n\t\t\ttry {\n\t\t\t\treturn fileSystem.readFileSync(path);\n\t\t\t} catch {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t\tsafeStatSync: path => {\n\t\t\ttry {\n\t\t\t\treturn fileSystem.statSync(path);\n\t\t\t} catch {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t};\n}\n","import {LogLevelKind} from \"./log-level-kind.js\";\nimport color from \"ansi-colors\";\nimport type {Loggable} from \"./loggable.js\";\n\n/**\n * A logger that can print to the console\n */\nexport class Logger implements Loggable {\n\tprivate readonly VERBOSE_COLOR = \"cyan\";\n\tprivate readonly WARNING_COLOR = \"yellow\";\n\tprivate readonly DEBUG_COLOR = \"magenta\";\n\n\tconstructor(readonly logLevel: LogLevelKind) {}\n\n\t/**\n\t * Logs info-related messages\n\t */\n\tinfo(...messages: unknown[]): void {\n\t\tif (this.logLevel < LogLevelKind.INFO) return;\n\t\tconsole.log(...messages);\n\t}\n\n\t/**\n\t * Logs verbose-related messages\n\t */\n\tverbose(...messages: unknown[]): void {\n\t\tif (this.logLevel < LogLevelKind.VERBOSE) return;\n\t\tconsole.log(color[this.VERBOSE_COLOR](\"[VERBOSE]\"), ...messages);\n\t}\n\n\t/**\n\t * Logs debug-related messages\n\t */\n\tdebug(...messages: unknown[]): void {\n\t\tif (this.logLevel < LogLevelKind.DEBUG) return;\n\t\tconsole.log(color[this.DEBUG_COLOR](\"[DEBUG]\"), ...messages);\n\t}\n\n\t/**\n\t * Logs warning-related messages\n\t */\n\twarn(...messages: unknown[]): void {\n\t\tconsole.log(color[this.WARNING_COLOR](`(!)`), ...messages);\n\t}\n}\n","import type {TaskOptions} from \"./task-options.js\";\nimport {realReadonlyFileSystem} from \"../file-system/file-system.js\";\nimport {Logger} from \"../logger/logger.js\";\nimport {LogLevelKind} from \"../logger/log-level-kind.js\";\nimport ts from \"typescript\";\nimport type {TS} from \"../../type/ts.js\";\n\nexport function createTaskOptions({\n\ttypescript = ts as typeof TS,\n\tfileSystem = realReadonlyFileSystem,\n\tdebug = false,\n\tcwd = process.cwd(),\n\tpreserveModuleSpecifiers = \"external\",\n\timportAttributes = true,\n\tlogger = new Logger(debug !== false ? LogLevelKind.DEBUG : LogLevelKind.NONE)\n}: Partial<TaskOptions> = {}): TaskOptions {\n\treturn {\n\t\ttypescript,\n\t\tfileSystem,\n\t\tdebug,\n\t\tcwd,\n\t\tpreserveModuleSpecifiers,\n\t\timportAttributes,\n\t\tlogger\n\t};\n}\n","import {transformSourceFile} from \"./transform-source-file.js\";\nimport type {TS} from \"../type/ts.js\";\nimport {createTaskOptions} from \"../shared/task/create-task-options.js\";\nimport {createSafeFileSystem} from \"../shared/file-system/file-system.js\";\nimport type {VisitorContext} from \"./visitor-context.js\";\nimport {ensureNodeFactory} from \"compatfactory\";\nimport type {CjsToEsmOptions} from \"./cjs-to-esm-options.js\";\n\nexport function cjsToEsmTransformer(options: Partial<CjsToEsmOptions> = {}): TS.TransformerFactory<TS.SourceFile> {\n\treturn context => {\n\t\tconst sanitizedOptions = createTaskOptions(options);\n\t\tconst {fileSystem, typescript} = sanitizedOptions;\n\n\t\t// Prepare a VisitorContext\n\t\tconst visitorContext: VisitorContext = {\n\t\t\t...sanitizedOptions,\n\t\t\ttransformationContext: context,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\t\t\tfactory: ensureNodeFactory(context.factory ?? typescript),\n\t\t\tfileSystem: createSafeFileSystem(fileSystem),\n\t\t\tonlyExports: false,\n\t\t\tresolveCache: new Map(),\n\t\t\tprinter: typescript.createPrinter()\n\t\t};\n\n\t\treturn sourceFile => {\n\t\t\treturn transformSourceFile(sourceFile, visitorContext).sourceFile;\n\t\t};\n\t};\n}\n","import type {TS} from \"../type/ts.js\";\nimport type {CjsToEsmOptions} from \"./cjs-to-esm-options.js\";\nimport {cjsToEsmTransformer} from \"./cjs-to-esm-transformer.js\";\n\n/**\n * CustomTransformer that converts CommonJS to tree-shakeable ESM\n */\nexport function cjsToEsm(options?: Partial<CjsToEsmOptions>): TS.CustomTransformers {\n\treturn {\n\t\tbefore: [cjsToEsmTransformer(options)]\n\t};\n}\n","/* eslint-disable @typescript-eslint/require-await */\nimport type {TransformTaskOptions} from \"../../../shared/task/transform-task-options.js\";\nimport {inspect} from \"util\";\nimport fastGlob from \"fast-glob\";\nimport type {TS} from \"../../../type/ts.js\";\nimport {cjsToEsm} from \"../../../transformer/cjs-to-esm.js\";\nimport {createCompilerHost} from \"../../../shared/compiler-host/create-compiler-host.js\";\nimport type {TransformResult} from \"../../../shared/task/transform-result.js\";\nimport color from \"ansi-colors\";\nimport {ensureArray, getFolderClosestToRoot, normalizeGlob} from \"../../../shared/util/util.js\";\nimport path from \"crosspath\";\nimport {TEMPORARY_SUBFOLDER_NAME} from \"../../../shared/constant.js\";\n\n/**\n * Executes the 'generate' task\n */\nexport async function transformTask(options: TransformTaskOptions): Promise<TransformResult> {\n\tlet {logger, input, cwd, outDir, fileSystem, write, typescript, debug, preserveModuleSpecifiers, importAttributes, hooks} = options;\n\n\tlogger.debug(\n\t\t\"Options:\",\n\t\tinspect(\n\t\t\t{input, outDir, cwd, write, debug, preserveModuleSpecifiers, importAttributes},\n\t\t\t{\n\t\t\t\tcolors: true,\n\t\t\t\tdepth: Infinity,\n\t\t\t\tmaxArrayLength: Infinity\n\t\t\t}\n\t\t)\n\t);\n\n\t// Match files based on the glob(s)\n\tconst matchedFiles = new Set(\n\t\tensureArray(input).flatMap(glob =>\n\t\t\tfastGlob.sync(normalizeGlob(path.normalize(glob)), {fs: fileSystem}).map(file => (path.isAbsolute(file) ? path.normalize(file) : path.join(cwd, file)))\n\t\t)\n\t);\n\n\tlogger.debug(`Matched files:`, matchedFiles.size < 1 ? \"(none)\" : [...matchedFiles].map(f => `\"${path.native.normalize(f)}\"`).join(\", \"));\n\n\t// Prepare the result object\n\tconst result: TransformResult = {\n\t\tfiles: []\n\t};\n\n\tif (matchedFiles.size < 1) {\n\t\treturn result;\n\t}\n\n\tconst closestFolderToRoot = getFolderClosestToRoot(cwd, matchedFiles);\n\n\t// We're going to need an outDir no matter what.\n\t// If none is given, get the folder closest to the root based on the matched files and use that one.\n\tif (outDir == null) {\n\t\toutDir = path.join(closestFolderToRoot, TEMPORARY_SUBFOLDER_NAME);\n\t}\n\n\t// Prepare CompilerOptions\n\tconst compilerOptions: TS.CompilerOptions = {\n\t\ttarget: typescript.ScriptTarget.ESNext,\n\t\tallowJs: true,\n\t\tdeclaration: false,\n\t\toutDir,\n\t\tsourceMap: false,\n\t\tnewLine: typescript.sys.newLine === \"\\n\" ? typescript.NewLineKind.LineFeed : typescript.NewLineKind.CarriageReturnLineFeed,\n\t\trootDir: closestFolderToRoot,\n\t\tmodule: typescript.ModuleKind.ESNext,\n\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated, @typescript-eslint/naming-convention\n\t\tmoduleResolution: (typescript.ModuleResolutionKind as {Bundler?: TS.ModuleResolutionKind}).Bundler ?? typescript.ModuleResolutionKind.NodeJs\n\t};\n\n\t// Create a TypeScript program based on the glob\n\tconst program = typescript.createProgram({\n\t\trootNames: [...matchedFiles],\n\t\toptions: compilerOptions,\n\t\thost: createCompilerHost({\n\t\t\tcwd,\n\t\t\tfileSystem,\n\t\t\ttypescript\n\t\t})\n\t});\n\n\tprogram.emit(\n\t\tundefined,\n\t\t(fileName, text) => {\n\t\t\tconst newFilename = path.normalize(fileName).replace(`/${TEMPORARY_SUBFOLDER_NAME}`, ``);\n\t\t\tconst nativeNormalizedFileName = path.native.normalize(newFilename);\n\n\t\t\t// If a hook was provided, call it\n\t\t\tif (hooks.writeFile != null) {\n\t\t\t\tconst hookResult = hooks.writeFile(nativeNormalizedFileName, text);\n\t\t\t\t// If it returned a new value, reassign it to `text`\n\t\t\t\tif (hookResult != null) {\n\t\t\t\t\ttext = hookResult;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.files.push({fileName: nativeNormalizedFileName, text});\n\n\t\t\t// Only write files to disk if requested\n\t\t\tif (write) {\n\t\t\t\tfileSystem.mkdirSync(path.native.dirname(nativeNormalizedFileName), {recursive: true});\n\t\t\t\tfileSystem.writeFileSync(nativeNormalizedFileName, text);\n\t\t\t}\n\t\t\tlogger.info(`${color.green(\"â\")} ${path.native.relative(cwd, nativeNormalizedFileName)}`);\n\t\t},\n\t\tundefined,\n\t\tfalse,\n\t\tcjsToEsm(options)\n\t);\n\treturn result;\n}\n","import type {FileSystem} from \"../file-system/file-system.js\";\nimport type {TS} from \"../../type/ts.js\";\nimport path from \"crosspath\";\n\nexport interface CreateCompilerHostOptions {\n\tcwd: string;\n\tfileSystem: FileSystem;\n\ttypescript: typeof TS;\n}\n\nexport function createCompilerHost({cwd, fileSystem, typescript}: CreateCompilerHostOptions): TS.CompilerHost {\n\treturn {\n\t\treadFile(fileName: string): string | undefined {\n\t\t\ttry {\n\t\t\t\treturn fileSystem.readFileSync(fileName).toString();\n\t\t\t} catch {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t\tdirectoryExists(directoryName: string): boolean {\n\t\t\ttry {\n\t\t\t\treturn fileSystem.statSync(directoryName).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tfileExists(directoryName: string): boolean {\n\t\t\ttry {\n\t\t\t\treturn fileSystem.statSync(directoryName).isFile();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\twriteFile: () => {\n\t\t\t// This is a noop\n\t\t},\n\n\t\tgetSourceFile(fileName: string, languageVersion: TS.ScriptTarget): TS.SourceFile | undefined {\n\t\t\tconst normalized = path.normalize(fileName);\n\t\t\tconst sourceText = this.readFile(fileName);\n\n\t\t\tif (sourceText == null) return undefined;\n\n\t\t\treturn typescript.createSourceFile(normalized, sourceText, languageVersion, true, getScriptKindFromPath(normalized, typescript));\n\t\t},\n\n\t\tgetCurrentDirectory() {\n\t\t\treturn path.native.normalize(cwd);\n\t\t},\n\n\t\tgetDirectories(directoryName: string) {\n\t\t\treturn typescript.sys.getDirectories(directoryName).map(path.native.normalize);\n\t\t},\n\n\t\tgetDefaultLibFileName(compilerOpts: TS.CompilerOptions): string {\n\t\t\treturn typescript.getDefaultLibFileName(compilerOpts);\n\t\t},\n\n\t\tgetCanonicalFileName(fileName: string): string {\n\t\t\treturn this.useCaseSensitiveFileNames() ? fileName : fileName.toLowerCase();\n\t\t},\n\n\t\tgetNewLine(): string {\n\t\t\treturn typescript.sys.newLine;\n\t\t},\n\n\t\tuseCaseSensitiveFileNames() {\n\t\t\treturn typescript.sys.useCaseSensitiveFileNames;\n\t\t},\n\n\t\trealpath(p: string): string {\n\t\t\treturn path.native.normalize(p);\n\t\t}\n\t};\n}\n\n/**\n * Gets a ScriptKind from the given path\n */\nconst getScriptKindFromPath = (p: string, typescript: typeof TS): TS.ScriptKind => {\n\tif (p.endsWith(\".js\")) {\n\t\treturn typescript.ScriptKind.JS;\n\t} else if (p.endsWith(\".ts\") || p.endsWith(\".mts\") || p.endsWith(\".cts\")) {\n\t\treturn typescript.ScriptKind.TS;\n\t} else if (p.endsWith(\".tsx\")) {\n\t\treturn typescript.ScriptKind.TSX;\n\t} else if (p.endsWith(\".jsx\")) {\n\t\treturn typescript.ScriptKind.JSX;\n\t} else if (p.endsWith(\".json\")) {\n\t\treturn typescript.ScriptKind.JSON;\n\t} else {\n\t\treturn typescript.ScriptKind.Unknown;\n\t}\n};\n","export const TEMPORARY_SUBFOLDER_NAME = \"__$$temporary_subfolder$$__\";\n","import {realFileSystem} from \"../file-system/file-system.js\";\nimport type {TransformTaskOptions} from \"./transform-task-options.js\";\nimport {createTaskOptions} from \"./create-task-options.js\";\nimport path from \"crosspath\";\nimport {ensureArray} from \"../util/util.js\";\nimport type {PartialExcept} from \"helpertypes\";\n\nexport function createTransformTaskOptions({\n\tfileSystem = realFileSystem,\n\twrite = true,\n\tinput,\n\thooks = {},\n\toutDir,\n\t...rest\n}: PartialExcept<TransformTaskOptions, \"input\" | \"outDir\">): TransformTaskOptions {\n\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\tif (input == null) {\n\t\tthrow new ReferenceError(`Missing required argument: 'input'`);\n\t}\n\n\tconst taskOptions = createTaskOptions(rest);\n\treturn {\n\t\t...taskOptions,\n\t\twrite,\n\t\tfileSystem,\n\t\thooks,\n\t\tinput: ensureArray(input).map(file => path.normalize(path.isAbsolute(file) ? file : path.join(taskOptions.cwd, file))),\n\t\toutDir: outDir == null ? undefined : path.normalize(path.isAbsolute(outDir) ? outDir : path.join(taskOptions.cwd, outDir))\n\t};\n}\n"],"mappings":"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","names":["path","path","path","path","path","path","path","path","color","path","path","color","path","path"]}